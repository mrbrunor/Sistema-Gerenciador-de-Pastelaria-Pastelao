/*
 * Copyright (C) 2014 tiago_000
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.au.gui;

import com.au.util.ManipulaConfigs;
import static com.au.util.ManipulaConfigs.getProp;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author tiago_000
 */
public class TelaConfiguracoes extends javax.swing.JDialog {

    private Properties prop;
    private boolean ativarConsole;
    private boolean usarImpressoraCaixa;
    private boolean usarImpressoraCozinha;
    private boolean[] salvou = {false, false};

    /**
     * Creates new form TelaConfiguracoes
     */
    public TelaConfiguracoes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            prop = getProp();
        } catch (IOException ex) {
            Logger.getLogger(TelaConfiguracoes.class.getName()).log(Level.SEVERE, null, ex);
        }
        preencheCamposImpressora();
        preencheCamposDebug();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotoesCaixa = new javax.swing.ButtonGroup();
        grupoBotoesCozinha = new javax.swing.ButtonGroup();
        painelSuperior = new javax.swing.JPanel();
        textoIconeConfiguracoes = new javax.swing.JLabel();
        textoConfiguracoes = new javax.swing.JLabel();
        textoNaveguePelasAbas = new javax.swing.JLabel();
        painelComAbasGeral = new javax.swing.JTabbedPane();
        painelImpressoras = new javax.swing.JPanel();
        painelImpressoraCaixa = new javax.swing.JPanel();
        checkboxAtivarImpressoraCaixa = new javax.swing.JCheckBox();
        textoNomeCaixa = new javax.swing.JLabel();
        campoNomeCaixa = new javax.swing.JTextField();
        painelImpressoraCozinha = new javax.swing.JPanel();
        checkboxAtivarImpressoraCozinha = new javax.swing.JCheckBox();
        textoNomeCozinha = new javax.swing.JLabel();
        CampoNomeCozinha = new javax.swing.JTextField();
        textoDefinaModelosEPortas = new javax.swing.JLabel();
        painelDebug = new javax.swing.JPanel();
        textoDefinaConfiguracoesDebug = new javax.swing.JLabel();
        checkboxIniciarConsole = new javax.swing.JCheckBox();
        textoParaFazerEfeito = new javax.swing.JLabel();
        botaoSalvarConfiguracoes = new javax.swing.JButton();
        botaCancelarConfiguracoes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configurações - Sistema Pastelão");
        setMinimumSize(new java.awt.Dimension(644, 420));
        setResizable(false);

        painelSuperior.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        textoIconeConfiguracoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/settings-64.png"))); // NOI18N
        textoIconeConfiguracoes.setToolTipText("");

        textoConfiguracoes.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        textoConfiguracoes.setText("Configurações");

        textoNaveguePelasAbas.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        textoNaveguePelasAbas.setText("Navegue pelas abas abaixo para definir as configurações do sistema.");

        javax.swing.GroupLayout painelSuperiorLayout = new javax.swing.GroupLayout(painelSuperior);
        painelSuperior.setLayout(painelSuperiorLayout);
        painelSuperiorLayout.setHorizontalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoIconeConfiguracoes)
                .addGap(18, 18, 18)
                .addGroup(painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoConfiguracoes)
                    .addComponent(textoNaveguePelasAbas))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelSuperiorLayout.setVerticalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelSuperiorLayout.createSequentialGroup()
                        .addComponent(textoConfiguracoes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textoNaveguePelasAbas))
                    .addComponent(textoIconeConfiguracoes))
                .addContainerGap())
        );

        painelComAbasGeral.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        painelImpressoras.setName(""); // NOI18N

        painelImpressoraCaixa.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Caixa"));

        checkboxAtivarImpressoraCaixa.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        checkboxAtivarImpressoraCaixa.setText("Ativar a impressora do Caixa");

        textoNomeCaixa.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoNomeCaixa.setText("Nome da Impressora do Caixa");

        campoNomeCaixa.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        javax.swing.GroupLayout painelImpressoraCaixaLayout = new javax.swing.GroupLayout(painelImpressoraCaixa);
        painelImpressoraCaixa.setLayout(painelImpressoraCaixaLayout);
        painelImpressoraCaixaLayout.setHorizontalGroup(
            painelImpressoraCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelImpressoraCaixaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelImpressoraCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoNomeCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelImpressoraCaixaLayout.createSequentialGroup()
                        .addComponent(checkboxAtivarImpressoraCaixa)
                        .addGap(0, 98, Short.MAX_VALUE))
                    .addComponent(campoNomeCaixa))
                .addContainerGap())
        );
        painelImpressoraCaixaLayout.setVerticalGroup(
            painelImpressoraCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelImpressoraCaixaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkboxAtivarImpressoraCaixa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textoNomeCaixa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoNomeCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        painelImpressoraCozinha.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Cozinha"));

        checkboxAtivarImpressoraCozinha.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        checkboxAtivarImpressoraCozinha.setText("Ativar a impressora da Cozinha");

        textoNomeCozinha.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoNomeCozinha.setText("Nome da Impressora do Cozinha");

        CampoNomeCozinha.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        javax.swing.GroupLayout painelImpressoraCozinhaLayout = new javax.swing.GroupLayout(painelImpressoraCozinha);
        painelImpressoraCozinha.setLayout(painelImpressoraCozinhaLayout);
        painelImpressoraCozinhaLayout.setHorizontalGroup(
            painelImpressoraCozinhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelImpressoraCozinhaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelImpressoraCozinhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoNomeCozinha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelImpressoraCozinhaLayout.createSequentialGroup()
                        .addComponent(checkboxAtivarImpressoraCozinha)
                        .addGap(0, 65, Short.MAX_VALUE))
                    .addComponent(CampoNomeCozinha))
                .addContainerGap())
        );
        painelImpressoraCozinhaLayout.setVerticalGroup(
            painelImpressoraCozinhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelImpressoraCozinhaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkboxAtivarImpressoraCozinha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textoNomeCozinha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CampoNomeCozinha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        textoDefinaModelosEPortas.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoDefinaModelosEPortas.setText("Defina abaixo os modelos e portas das impressoras do sistema:");

        javax.swing.GroupLayout painelImpressorasLayout = new javax.swing.GroupLayout(painelImpressoras);
        painelImpressoras.setLayout(painelImpressorasLayout);
        painelImpressorasLayout.setHorizontalGroup(
            painelImpressorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelImpressorasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelImpressorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoDefinaModelosEPortas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelImpressorasLayout.createSequentialGroup()
                        .addComponent(painelImpressoraCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelImpressoraCozinha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 19, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelImpressorasLayout.setVerticalGroup(
            painelImpressorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelImpressorasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoDefinaModelosEPortas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelImpressorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelImpressoraCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelImpressoraCozinha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        painelComAbasGeral.addTab("<html><font size=4><b>Impressoras", new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/check-26.png")), painelImpressoras); // NOI18N

        textoDefinaConfiguracoesDebug.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoDefinaConfiguracoesDebug.setText("Defina abaixo as configurações para debugar o sistema:");

        checkboxIniciarConsole.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkboxIniciarConsole.setText("Ativar Console ao iniciar o sistema");

        textoParaFazerEfeito.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        textoParaFazerEfeito.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoParaFazerEfeito.setText("Para estas alterações fazerem efeito, é necessário fechar e abrir novamente o sistema");

        javax.swing.GroupLayout painelDebugLayout = new javax.swing.GroupLayout(painelDebug);
        painelDebug.setLayout(painelDebugLayout);
        painelDebugLayout.setHorizontalGroup(
            painelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDebugLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelDebugLayout.createSequentialGroup()
                        .addComponent(checkboxIniciarConsole)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(textoParaFazerEfeito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textoDefinaConfiguracoesDebug, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE))
                .addContainerGap())
        );
        painelDebugLayout.setVerticalGroup(
            painelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDebugLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoDefinaConfiguracoesDebug)
                .addGap(18, 18, 18)
                .addComponent(checkboxIniciarConsole)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(textoParaFazerEfeito)
                .addContainerGap())
        );

        painelComAbasGeral.addTab("<html><font size=4><b>Debug", new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/monitor-26.png")), painelDebug); // NOI18N

        botaoSalvarConfiguracoes.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        botaoSalvarConfiguracoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/ok-32.png"))); // NOI18N
        botaoSalvarConfiguracoes.setText("Salvar Alterações nas Configurações");
        botaoSalvarConfiguracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarConfiguracoesActionPerformed(evt);
            }
        });

        botaCancelarConfiguracoes.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        botaCancelarConfiguracoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/cancel-32.png"))); // NOI18N
        botaCancelarConfiguracoes.setText("Cancelar Alterações nas Configurações");
        botaCancelarConfiguracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaCancelarConfiguracoesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botaCancelarConfiguracoes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoSalvarConfiguracoes))
                    .addComponent(painelComAbasGeral))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelComAbasGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoSalvarConfiguracoes)
                    .addComponent(botaCancelarConfiguracoes))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(757, 459));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void preencheCamposImpressora() {
        //Recuperando configurações do arquivo para as variáveis;
        usarImpressoraCaixa = Boolean.parseBoolean(prop.getProperty("prop.impressora.caixa.ativa"));
        usarImpressoraCozinha = Boolean.parseBoolean(prop.getProperty("prop.impressora.cozinha.ativa"));

        //Definindo e verificando quais impressoras estão ativas
        checkboxAtivarImpressoraCaixa.setSelected(usarImpressoraCaixa);
        checkboxAtivarImpressoraCozinha.setSelected(usarImpressoraCozinha);
        
        //Definindo os nomes das impressoras
        campoNomeCaixa.setText(prop.getProperty("prop.impressora.caixa.nome"));
        CampoNomeCozinha.setText(prop.getProperty("prop.impressora.cozinha.nome"));

        //Desativando os campos caso as impressoras não estejam ativadas
        if (!usarImpressoraCaixa) {
            campoNomeCaixa.setEnabled(false);
        }
        if (!usarImpressoraCozinha) {
            CampoNomeCozinha.setEnabled(false);
        }
        checkboxAtivarImpressoraCaixa.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                boolean estaSelecionado = checkboxAtivarImpressoraCaixa.isSelected();
                campoNomeCaixa.setEnabled(estaSelecionado);
            }
        });
        checkboxAtivarImpressoraCozinha.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                boolean estaSelecionado = checkboxAtivarImpressoraCozinha.isSelected();
                CampoNomeCozinha.setEnabled(estaSelecionado);
            }
        });
    }

    private void preencheCamposDebug() {
        ativarConsole = Boolean.parseBoolean(prop.getProperty("prop.debug.console"));
        if (ativarConsole) {
            checkboxIniciarConsole.setSelected(true);
        }
    }

    private boolean salvarConfigsImpressoraCaixa() {
        System.out.println("Configurando Impressora do Caixa:");
        usarImpressoraCaixa = checkboxAtivarImpressoraCaixa.isSelected();        
        System.out.println("Usar impressora do caixa: " + usarImpressoraCaixa);        
        
        
        try {
            salvou[0] = ManipulaConfigs.setProp("prop.impressora.caixa.ativa", String.valueOf(usarImpressoraCaixa));
            salvou[1] = ManipulaConfigs.setProp("prop.impressora.caixa.nome", String.valueOf(campoNomeCaixa.getText()));
        } catch (IOException ex) {
            Logger.getLogger(TelaConfiguracoes.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < 2; i++) {
            if (salvou[i] == false) {
                return false;
            }
        }
        System.out.println("---------------------------------------------\n");
        return true;
    }

    private boolean salvarConfigsImpressoraCozinha() {
        System.out.println("Configurando Impressora da Cozinha:");
        usarImpressoraCozinha = checkboxAtivarImpressoraCozinha.isSelected();
        System.out.println("Usar impressora da cozinha: " + usarImpressoraCozinha);        
        
        try {
            salvou[0] = ManipulaConfigs.setProp("prop.impressora.cozinha.ativa", String.valueOf(usarImpressoraCozinha));
            salvou[1] = ManipulaConfigs.setProp("prop.impressora.cozinha.nome", String.valueOf(CampoNomeCozinha.getText()));
        } catch (IOException ex) {
            Logger.getLogger(TelaConfiguracoes.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < 2; i++) {
            if (salvou[i] == false) {
                return false;
            }
        }
        System.out.println("---------------------------------------------");
        return true;
    }

    private boolean salvarConfigsDebug() {
        try {
            boolean saveProp = ManipulaConfigs.setProp("prop.debug.console", String.valueOf(checkboxIniciarConsole.isSelected()));
            System.out.println("---------------------------------------------");
            System.out.println("O console agora foi configurado para: " + getProp().getProperty("prop.debug.console")); //A configuração é buscada diretamente do arquivo de conf para verificar se foi mesmo alterada
            System.out.println("---------------------------------------------");
            return saveProp;
        } catch (IOException ex) {
            Logger.getLogger(TelaConfiguracoes.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    private void botaCancelarConfiguracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaCancelarConfiguracoesActionPerformed
        this.dispose();
    }//GEN-LAST:event_botaCancelarConfiguracoesActionPerformed

    private void botaoSalvarConfiguracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarConfiguracoesActionPerformed
        // VERIFICAR E SALVAR AS CONFIGS, no momento apenas a config do console está sendo salva
        if (salvarConfigsDebug() && salvarConfigsImpressoraCaixa() && salvarConfigsImpressoraCozinha()) {
            System.out.println("As configurações foram salvas com sucesso!");
            this.dispose();
        } else {
            System.out.println("Houve erro ao salvar as Configurações");
        }
    }//GEN-LAST:event_botaoSalvarConfiguracoesActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CampoNomeCozinha;
    private javax.swing.JButton botaCancelarConfiguracoes;
    private javax.swing.JButton botaoSalvarConfiguracoes;
    private javax.swing.JTextField campoNomeCaixa;
    private javax.swing.JCheckBox checkboxAtivarImpressoraCaixa;
    private javax.swing.JCheckBox checkboxAtivarImpressoraCozinha;
    private javax.swing.JCheckBox checkboxIniciarConsole;
    private javax.swing.ButtonGroup grupoBotoesCaixa;
    private javax.swing.ButtonGroup grupoBotoesCozinha;
    private javax.swing.JTabbedPane painelComAbasGeral;
    private javax.swing.JPanel painelDebug;
    private javax.swing.JPanel painelImpressoraCaixa;
    private javax.swing.JPanel painelImpressoraCozinha;
    private javax.swing.JPanel painelImpressoras;
    private javax.swing.JPanel painelSuperior;
    private javax.swing.JLabel textoConfiguracoes;
    private javax.swing.JLabel textoDefinaConfiguracoesDebug;
    private javax.swing.JLabel textoDefinaModelosEPortas;
    private javax.swing.JLabel textoIconeConfiguracoes;
    private javax.swing.JLabel textoNaveguePelasAbas;
    private javax.swing.JLabel textoNomeCaixa;
    private javax.swing.JLabel textoNomeCozinha;
    private javax.swing.JLabel textoParaFazerEfeito;
    // End of variables declaration//GEN-END:variables
}
