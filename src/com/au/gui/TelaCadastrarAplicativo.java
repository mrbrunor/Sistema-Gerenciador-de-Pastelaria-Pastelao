/*
 * Copyright (C) 2014 BrunoRicardo
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.au.gui;

import com.au.bean.Aplicativo;
import com.au.dao.AplicativoDao;
import com.au.gui.tmodel.AplicativoTableModel;
import java.awt.Color;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.border.MatteBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author BrunoRicardo
 */
public class TelaCadastrarAplicativo extends javax.swing.JDialog implements ListSelectionListener {

    private AplicativoTableModel tableModel;
    private final AplicativoDao aDao = new AplicativoDao();
    private final Border vermelha = new MatteBorder(1, 1, 1, 1, Color.red);
    private final Border normal;
    private boolean[] valida = {false, false};

    /**
     * Creates new form TelaCadastrarFormasDePagamento
     *
     * @param parent
     * @param modal
     */
    public TelaCadastrarAplicativo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        textoErroAtivo.setVisible(false);
        textoErroNome.setVisible(false);        
        normal = campoNome.getBorder();
        inicializaTableModel();
        habilitaBotoesParaSalvar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelSuperior = new javax.swing.JPanel();
        textoAdicionarFormaPagamento = new javax.swing.JLabel();
        textoIconeNovFormaPagamento = new javax.swing.JLabel();
        textoPreencherDados = new javax.swing.JLabel();
        painelAdicionarModificarFormasPagamento = new javax.swing.JPanel();
        textoNome = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        campoId = new javax.swing.JTextField();
        textoId = new javax.swing.JLabel();
        caixaAtivo = new javax.swing.JComboBox();
        textoAtiva = new javax.swing.JLabel();
        textoErroAtivo = new javax.swing.JLabel();
        textoErroNome = new javax.swing.JLabel();
        painelProcurarFormaPagamento = new javax.swing.JPanel();
        campoPesquisarAplicativo = new javax.swing.JTextField();
        botaoProcurarAplicativo = new javax.swing.JButton();
        textoProcurarFormaPagamento = new javax.swing.JLabel();
        textoCliqueParaEditar = new javax.swing.JLabel();
        painelScrollTabela = new javax.swing.JScrollPane();
        tabelaAplicativo = new javax.swing.JTable();
        painelBotoes = new javax.swing.JPanel();
        botaoCancelarAplicativo = new javax.swing.JButton();
        botaoCadastrarAplicativo = new javax.swing.JButton();
        botaoLimparCampos = new javax.swing.JButton();
        botaoAtualizarAplicativo = new javax.swing.JButton();
        botaoExcluirAplicativo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sistema Pastelão - Formas de Pagamento");

        painelSuperior.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        textoAdicionarFormaPagamento.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        textoAdicionarFormaPagamento.setText("Adicionar Novo Aplicativo");

        textoIconeNovFormaPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/bank_cards-64.png"))); // NOI18N

        textoPreencherDados.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        textoPreencherDados.setText("Preencha os dados abaixo para adicionar um novo aplicativo.");

        javax.swing.GroupLayout painelSuperiorLayout = new javax.swing.GroupLayout(painelSuperior);
        painelSuperior.setLayout(painelSuperiorLayout);
        painelSuperiorLayout.setHorizontalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoIconeNovFormaPagamento)
                .addGap(18, 18, 18)
                .addGroup(painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoAdicionarFormaPagamento)
                    .addComponent(textoPreencherDados))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelSuperiorLayout.setVerticalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoIconeNovFormaPagamento)
                    .addGroup(painelSuperiorLayout.createSequentialGroup()
                        .addComponent(textoAdicionarFormaPagamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textoPreencherDados)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelAdicionarModificarFormasPagamento.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Adicionar/Modificar Aplicativo"));

        textoNome.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoNome.setText("Nome Aplicativo:");

        campoNome.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoNomeFocusLost(evt);
            }
        });

        campoId.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoId.setEnabled(false);

        textoId.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoId.setText("ID Aplicativo:");

        caixaAtivo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Sim", "Não" }));
        caixaAtivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaAtivoActionPerformed(evt);
            }
        });

        textoAtiva.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoAtiva.setText("Ativa:");

        textoErroAtivo.setForeground(new java.awt.Color(255, 0, 0));
        textoErroAtivo.setText("Selecione se esta ativa ou não.");

        textoErroNome.setForeground(new java.awt.Color(255, 0, 0));
        textoErroNome.setText("Informe o nome.");

        javax.swing.GroupLayout painelAdicionarModificarFormasPagamentoLayout = new javax.swing.GroupLayout(painelAdicionarModificarFormasPagamento);
        painelAdicionarModificarFormasPagamento.setLayout(painelAdicionarModificarFormasPagamentoLayout);
        painelAdicionarModificarFormasPagamentoLayout.setHorizontalGroup(
            painelAdicionarModificarFormasPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAdicionarModificarFormasPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAdicionarModificarFormasPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(textoId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textoAtiva, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelAdicionarModificarFormasPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoErroNome)
                    .addComponent(textoErroAtivo)
                    .addComponent(caixaAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        painelAdicionarModificarFormasPagamentoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {textoAtiva, textoId, textoNome});

        painelAdicionarModificarFormasPagamentoLayout.setVerticalGroup(
            painelAdicionarModificarFormasPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAdicionarModificarFormasPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAdicionarModificarFormasPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoId)
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFormasPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoErroNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFormasPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoAtiva)
                    .addComponent(caixaAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoErroAtivo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelProcurarFormaPagamento.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Procurar Aplicativo Existente"));

        campoPesquisarAplicativo.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoPesquisarAplicativo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoPesquisarAplicativoFocusGained(evt);
            }
        });
        campoPesquisarAplicativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPesquisarAplicativoActionPerformed(evt);
            }
        });

        botaoProcurarAplicativo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoProcurarAplicativo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/search-26.png"))); // NOI18N
        botaoProcurarAplicativo.setText("Procurar");
        botaoProcurarAplicativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoProcurarAplicativoActionPerformed(evt);
            }
        });

        textoProcurarFormaPagamento.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoProcurarFormaPagamento.setText("Procurar Aplicativo:");

        textoCliqueParaEditar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoCliqueParaEditar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoCliqueParaEditar.setText("Clique no aplicativo desejado na lista para editá-lo no painel ao lado:");

        tabelaAplicativo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Descrição"
            }
        ));
        painelScrollTabela.setViewportView(tabelaAplicativo);
        if (tabelaAplicativo.getColumnModel().getColumnCount() > 0) {
            tabelaAplicativo.getColumnModel().getColumn(0).setMaxWidth(35);
        }

        javax.swing.GroupLayout painelProcurarFormaPagamentoLayout = new javax.swing.GroupLayout(painelProcurarFormaPagamento);
        painelProcurarFormaPagamento.setLayout(painelProcurarFormaPagamentoLayout);
        painelProcurarFormaPagamentoLayout.setHorizontalGroup(
            painelProcurarFormaPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelProcurarFormaPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelProcurarFormaPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelProcurarFormaPagamentoLayout.createSequentialGroup()
                        .addComponent(textoProcurarFormaPagamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(campoPesquisarAplicativo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoProcurarAplicativo))
                    .addComponent(painelScrollTabela)
                    .addComponent(textoCliqueParaEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelProcurarFormaPagamentoLayout.setVerticalGroup(
            painelProcurarFormaPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelProcurarFormaPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelProcurarFormaPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoPesquisarAplicativo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoProcurarFormaPagamento)
                    .addComponent(botaoProcurarAplicativo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textoCliqueParaEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelScrollTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );

        botaoCancelarAplicativo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoCancelarAplicativo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/cancel-32.png"))); // NOI18N
        botaoCancelarAplicativo.setText("Cancelar Cadastro");
        botaoCancelarAplicativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarAplicativoActionPerformed(evt);
            }
        });

        botaoCadastrarAplicativo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoCadastrarAplicativo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/ok-32.png"))); // NOI18N
        botaoCadastrarAplicativo.setText("Cadastrar Aplicativo");
        botaoCadastrarAplicativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarAplicativoActionPerformed(evt);
            }
        });

        botaoLimparCampos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoLimparCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/erase-32.png"))); // NOI18N
        botaoLimparCampos.setText("Limpar Campos");
        botaoLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparCamposActionPerformed(evt);
            }
        });

        botaoAtualizarAplicativo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoAtualizarAplicativo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/refresh-32.png"))); // NOI18N
        botaoAtualizarAplicativo.setText("Atualizar Aplicativo");
        botaoAtualizarAplicativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarAplicativoActionPerformed(evt);
            }
        });

        botaoExcluirAplicativo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoExcluirAplicativo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/delete-32.png"))); // NOI18N
        botaoExcluirAplicativo.setText("Excluir Aplicativo");
        botaoExcluirAplicativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirAplicativoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotoesLayout = new javax.swing.GroupLayout(painelBotoes);
        painelBotoes.setLayout(painelBotoesLayout);
        painelBotoesLayout.setHorizontalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoLimparCampos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoExcluirAplicativo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoAtualizarAplicativo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoCancelarAplicativo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoCadastrarAplicativo)
                .addContainerGap())
        );
        painelBotoesLayout.setVerticalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCancelarAplicativo)
                    .addComponent(botaoCadastrarAplicativo)
                    .addComponent(botaoLimparCampos)
                    .addComponent(botaoAtualizarAplicativo)
                    .addComponent(botaoExcluirAplicativo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelBotoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(painelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelAdicionarModificarFormasPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelProcurarFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelProcurarFormaPagamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelAdicionarModificarFormasPagamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        painelAdicionarModificarFormasPagamento.getAccessibleContext().setAccessibleName("Adicionar/Modificar Aplicativo");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void campoPesquisarAplicativoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoPesquisarAplicativoFocusGained
        campoPesquisarAplicativo.selectAll();
    }//GEN-LAST:event_campoPesquisarAplicativoFocusGained

    private void botaoCadastrarAplicativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarAplicativoActionPerformed
        if (valida()) {
            cadastrarAplicativo();
        }
    }//GEN-LAST:event_botaoCadastrarAplicativoActionPerformed

    private void botaoLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparCamposActionPerformed
        limpaCampos();
        habilitaBotoesParaSalvar();
    }//GEN-LAST:event_botaoLimparCamposActionPerformed

    private void botaoExcluirAplicativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirAplicativoActionPerformed
        if (valida()) {
            excluirAplicativo();
            habilitaBotoesParaSalvar();
        }
    }//GEN-LAST:event_botaoExcluirAplicativoActionPerformed

    private void botaoAtualizarAplicativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarAplicativoActionPerformed
        if (valida()) {
            atualizarAplicativo();
            habilitaBotoesParaSalvar();
        }
    }//GEN-LAST:event_botaoAtualizarAplicativoActionPerformed

    private void botaoCancelarAplicativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarAplicativoActionPerformed
        this.dispose();
    }//GEN-LAST:event_botaoCancelarAplicativoActionPerformed

    private void botaoProcurarAplicativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoProcurarAplicativoActionPerformed
        pesquisaAplicativo();
    }//GEN-LAST:event_botaoProcurarAplicativoActionPerformed

    private void campoPesquisarAplicativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPesquisarAplicativoActionPerformed
        pesquisaAplicativo();
    }//GEN-LAST:event_campoPesquisarAplicativoActionPerformed

    private void caixaAtivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaAtivoActionPerformed
        valida(null, caixaAtivo, 1, textoErroAtivo);
    }//GEN-LAST:event_caixaAtivoActionPerformed

    private void campoNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoNomeFocusLost
        valida(campoNome, null, 0, textoErroNome);
    }//GEN-LAST:event_campoNomeFocusLost

    private void campoNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoNomeFocusGained
        campoNome.selectAll();
    }//GEN-LAST:event_campoNomeFocusGained

    private void atualizarAplicativo() {
        aDao.abreConnection();
        aDao.atualizaAplicativo(formToAplicativo());
        aDao.fechaConnection();
        JOptionPane.showMessageDialog(this, "Aplicativo Atualizada Com Sucesso", "Cadastro de Aplicativo", JOptionPane.INFORMATION_MESSAGE);
        limpaCampos();
        inicializaTableModel();
    }

    private void atualizaTableModel(List<Aplicativo> aplicativos) {
        if (aplicativos != null && aplicativos.isEmpty()) {
            Aplicativo aplicativo = new Aplicativo();
            aplicativo.setNomeAplicativo("Nenhum Registro Encontrado");
            aplicativos.add(aplicativo);
        }
        tableModel = new AplicativoTableModel(aplicativos);
        tabelaAplicativo.setModel(tableModel);
        tabelaAplicativo.getSelectionModel().addListSelectionListener(this);
        tabelaAplicativo.getColumnModel().getColumn(0).setMaxWidth(35);
        tabelaAplicativo.getColumnModel().getColumn(2).setMaxWidth(110);        
    }

    private void cadastrarAplicativo() {
        Aplicativo aplicativo = formToAplicativo();
        aDao.abreConnection();
        aDao.adicionaAplicativo(aplicativo);
        aDao.fechaConnection();
        JOptionPane.showMessageDialog(this, "Aplicativo Cadastrado Com Sucesso", "Cadastro de Aplicativo", JOptionPane.INFORMATION_MESSAGE);
        limpaCampos();
        inicializaTableModel();
    }

    private void desabilitaBotoesParaSalvar() {
        habilitaOuDesabilitaBotoesEdicao(false);
    }

    private void excluirAplicativo() {
        aDao.abreConnection();
        aDao.deletaAplicativo(formToAplicativo());
        aDao.fechaConnection();
        JOptionPane.showMessageDialog(this, "Aplicativo Removido Com Sucesso", "Cadastro de Aplicativo", JOptionPane.INFORMATION_MESSAGE);
        limpaCampos();
        inicializaTableModel();
    }

    private void aplicativoToForm(Aplicativo aplicativo) {
        campoId.setText(String.valueOf(aplicativo.getIdAplicativo()));
        campoNome.setText(aplicativo.getNomeAplicativo());        
        if ((byte) 0 == aplicativo.getEstaAtivo()) {
            caixaAtivo.setSelectedIndex(2);
        } else {
            caixaAtivo.setSelectedIndex(1);
        }
        desabilitaBotoesParaSalvar();
    }

    private Aplicativo formToAplicativo() {
        Aplicativo aplicativo = new Aplicativo();
        if (!"".equals(campoId.getText())) {
            aplicativo.setIdAplicativo(Integer.parseInt(campoId.getText()));
        }
        aplicativo.setNomeAplicativo(campoNome.getText());        

        if (caixaAtivo.getSelectedItem() == "Não") {
            aplicativo.setEstaAtivo((byte) 0);
        } else {
            aplicativo.setEstaAtivo((byte) 1);
        }
        return aplicativo;
    }

    private void habilitaBotoesParaSalvar() {
        habilitaOuDesabilitaBotoesEdicao(true);
    }

    private void habilitaOuDesabilitaBotoesEdicao(boolean enabled) {
        botaoAtualizarAplicativo.setEnabled(!enabled);
        botaoCadastrarAplicativo.setEnabled(enabled);
        botaoExcluirAplicativo.setEnabled(!enabled);
    }

    private void inicializaTableModel() {
        aDao.abreConnection();
        atualizaTableModel(aDao.getLista());
        aDao.fechaConnection();
    }

    private void limpaCampos() {
        campoId.setText("");
        campoNome.setText("");
        caixaAtivo.setSelectedIndex(0);        
        caixaAtivo.setBorder(normal);        
        campoId.setBorder(normal);
        campoNome.setBorder(normal);
        textoErroAtivo.setVisible(false);
        textoErroNome.setVisible(false);        
    }

    private void pesquisaAplicativo() {
        aDao.abreConnection();
        String pesquisa = "%" + campoPesquisarAplicativo.getText() + "%";
        limpaCampos();
        atualizaTableModel(aDao.pesquisarAplicativo(pesquisa));
        aDao.fechaConnection();
    }

    public void valida(JTextField campo, JComboBox combo, int indexVetor, JLabel texto) {

        if (campo != null) {
            if (!"".equals(campo.getText())) {
                campo.setBorder(normal);
                valida[indexVetor] = true;
                texto.setVisible(false);
            } else {
                campo.setBorder(vermelha);
                valida[indexVetor] = false;
                texto.setVisible(true);
            }
        }
        if (combo != null) {
            if (combo.getSelectedIndex() != 0) {
                combo.setBorder(normal);
                valida[indexVetor] = true;
                texto.setVisible(false);
            } else {
                combo.setBorder(vermelha);
                valida[indexVetor] = false;
                texto.setVisible(true);
            }
        }
    }

    public boolean valida() {
        boolean validar = true;
        if (valida[0] == false) {
            valida(campoNome, null, 0, textoErroNome);
            validar = false;
            System.out.println("FALSE 0");
        }        
        if (valida[1] == false) {
            valida(null, caixaAtivo, 2, textoErroAtivo);
            validar = false;
            System.out.println("FALSE 1");
        }
        return validar;
    }

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAtualizarAplicativo;
    private javax.swing.JButton botaoCadastrarAplicativo;
    private javax.swing.JButton botaoCancelarAplicativo;
    private javax.swing.JButton botaoExcluirAplicativo;
    private javax.swing.JButton botaoLimparCampos;
    private javax.swing.JButton botaoProcurarAplicativo;
    private javax.swing.JComboBox caixaAtivo;
    private javax.swing.JTextField campoId;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoPesquisarAplicativo;
    private javax.swing.JPanel painelAdicionarModificarFormasPagamento;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JPanel painelProcurarFormaPagamento;
    private javax.swing.JScrollPane painelScrollTabela;
    private javax.swing.JPanel painelSuperior;
    private javax.swing.JTable tabelaAplicativo;
    private javax.swing.JLabel textoAdicionarFormaPagamento;
    private javax.swing.JLabel textoAtiva;
    private javax.swing.JLabel textoCliqueParaEditar;
    private javax.swing.JLabel textoErroAtivo;
    private javax.swing.JLabel textoErroNome;
    private javax.swing.JLabel textoIconeNovFormaPagamento;
    private javax.swing.JLabel textoId;
    private javax.swing.JLabel textoNome;
    private javax.swing.JLabel textoPreencherDados;
    private javax.swing.JLabel textoProcurarFormaPagamento;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (tabelaAplicativo.getSelectedRow() != -1) {
            Aplicativo aplicativo = tableModel.getAplicativos().get(tabelaAplicativo.getSelectedRow());
            if (aplicativo.getIdAplicativo()!= 0) {
                aplicativoToForm(aplicativo);
            }
        }
    }
}
