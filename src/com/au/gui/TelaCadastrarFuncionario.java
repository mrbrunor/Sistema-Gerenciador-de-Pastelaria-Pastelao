/*
 * Copyright (C) 2014 BrunoRicardo
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.au.gui;

import com.au.bean.Funcionario;
import com.au.dao.FuncionarioDao;
import com.au.gui.tmodel.FuncionarioTableModel;
import com.au.util.HexSha;
import com.au.util.LimitaDigitos;
import com.au.util.ValidaEmail;
import java.awt.Color;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.border.MatteBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author BrunoRicardo
 */
public class TelaCadastrarFuncionario extends javax.swing.JDialog implements ListSelectionListener {

    private FuncionarioTableModel tableModel;
    private final Border vermelha = new MatteBorder(1, 1, 1, 1, Color.red);
    private final Border normal;
    private final FuncionarioDao fDao = new FuncionarioDao();
    private boolean[] valida = {false, false, false, false, false, false, false, false, false};

    /**
     * Creates new form TelaCadastrarFuncionario
     *
     * @param parent
     * @param modal
     */
    public TelaCadastrarFuncionario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        textoErroAtivo.setVisible(false);
        textoErroCel.setVisible(false);
        textoErroCpf.setVisible(false);
        textoErroEmail.setVisible(false);
        textoErroNivel.setVisible(false);
        textoErroNome.setVisible(false);
        textoErroPass1.setVisible(false);
        textoErroPass2.setVisible(false);
        textoErroUser.setVisible(false);
        campoCelular.setDocument(new LimitaDigitos((15), "[^0-9()\\-]"));
        campoCpf.setDocument(new LimitaDigitos((15), "[^0-9\\.-]"));
        campoEmail.setDocument(new LimitaDigitos((150), "[^0-9._@a-zA-Z\\-]"));
        campoNome.setDocument(new LimitaDigitos((250), "[^a-zA-Z À-ÄÈ-ËÌ-ÏÒ-ÖÙ-Üà-äè-ëì-ïò-öù-üçÇ]"));
        campoPesquisarFuncionario.setDocument(new LimitaDigitos((250), "[^a-zA-Z À-ÄÈ-ËÌ-ÏÒ-ÖÙ-Üà-äè-ëì-ïò-öù-ü0-9çÇ]"));
        campoSenha.setDocument(new LimitaDigitos((64), ""));
        campoSenha2.setDocument(new LimitaDigitos((64), ""));
        campoTelefone.setDocument(new LimitaDigitos((15), "[^0-9()\\-]"));
        campoUser.setDocument(new LimitaDigitos((50), "[^0-9a-zA-Z\\-._]"));

        normal = campoNome.getBorder();
        inicializaTableModel();
        habilitaBotoesParaSalvar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelSuperior = new javax.swing.JPanel();
        textoIconeNovoFuncionario = new javax.swing.JLabel();
        textoAdicionarNovoFuncionario = new javax.swing.JLabel();
        textoPreencherDados = new javax.swing.JLabel();
        painelAdicionarModificarFuncionarios = new javax.swing.JPanel();
        textoId = new javax.swing.JLabel();
        campoId = new javax.swing.JTextField();
        textoNome = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        textoCpf = new javax.swing.JLabel();
        campoCpf = new javax.swing.JTextField();
        textoEmail = new javax.swing.JLabel();
        campoEmail = new javax.swing.JTextField();
        textoTelefone = new javax.swing.JLabel();
        campoTelefone = new javax.swing.JTextField();
        textoCelular = new javax.swing.JLabel();
        campoCelular = new javax.swing.JTextField();
        caixaAtivo = new javax.swing.JComboBox();
        textoAtivo = new javax.swing.JLabel();
        textoNivel = new javax.swing.JLabel();
        caixaNivel = new javax.swing.JComboBox();
        campoSenha2 = new javax.swing.JPasswordField();
        textoSenha2 = new javax.swing.JLabel();
        textoSenha = new javax.swing.JLabel();
        campoSenha = new javax.swing.JPasswordField();
        campoUser = new javax.swing.JTextField();
        textoUser = new javax.swing.JLabel();
        textoErroNome = new javax.swing.JLabel();
        textoErroCpf = new javax.swing.JLabel();
        textoErroEmail = new javax.swing.JLabel();
        textoErroCel = new javax.swing.JLabel();
        textoErroUser = new javax.swing.JLabel();
        textoErroPass1 = new javax.swing.JLabel();
        textoErroPass2 = new javax.swing.JLabel();
        textoErroNivel = new javax.swing.JLabel();
        textoErroAtivo = new javax.swing.JLabel();
        painelProcurarFuncionarios = new javax.swing.JPanel();
        textoProcurarFuncionario = new javax.swing.JLabel();
        campoPesquisarFuncionario = new javax.swing.JTextField();
        botaoProcurarFuncionario = new javax.swing.JButton();
        textoCliqueParaEditar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFuncionarios = new javax.swing.JTable();
        painelBotoes = new javax.swing.JPanel();
        botaoLimparCampos = new javax.swing.JButton();
        botaoExcluirFuncionario = new javax.swing.JButton();
        botaoAtualizarFuncionario = new javax.swing.JButton();
        botaoCancelarCadastro = new javax.swing.JButton();
        botaoCadastrarFuncionario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        painelSuperior.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        textoIconeNovoFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/add_user-64.png"))); // NOI18N

        textoAdicionarNovoFuncionario.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        textoAdicionarNovoFuncionario.setText("Adicionar Novo Funcionário");

        textoPreencherDados.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        textoPreencherDados.setText("Preencha os dados abaixo para adicionar um novo funcionário.");

        javax.swing.GroupLayout painelSuperiorLayout = new javax.swing.GroupLayout(painelSuperior);
        painelSuperior.setLayout(painelSuperiorLayout);
        painelSuperiorLayout.setHorizontalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoIconeNovoFuncionario)
                .addGap(18, 18, 18)
                .addGroup(painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoAdicionarNovoFuncionario)
                    .addComponent(textoPreencherDados))
                .addContainerGap(450, Short.MAX_VALUE))
        );
        painelSuperiorLayout.setVerticalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelSuperiorLayout.createSequentialGroup()
                        .addComponent(textoAdicionarNovoFuncionario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textoPreencherDados))
                    .addComponent(textoIconeNovoFuncionario))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelAdicionarModificarFuncionarios.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Adicionar/Modificar Funcionário"));

        textoId.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoId.setText("ID:");

        campoId.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoId.setEnabled(false);

        textoNome.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoNome.setText("Nome Completo:");

        campoNome.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoNomeFocusLost(evt);
            }
        });

        textoCpf.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoCpf.setText("CPF:");

        campoCpf.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoCpfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoCpfFocusLost(evt);
            }
        });

        textoEmail.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoEmail.setText("E-mail:");

        campoEmail.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoEmailFocusLost(evt);
            }
        });

        textoTelefone.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoTelefone.setText("Telefone:");

        campoTelefone.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoTelefoneFocusGained(evt);
            }
        });

        textoCelular.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoCelular.setText("Celular:");

        campoCelular.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoCelular.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoCelularFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoCelularFocusLost(evt);
            }
        });

        caixaAtivo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Não", "Sim" }));
        caixaAtivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaAtivoActionPerformed(evt);
            }
        });

        textoAtivo.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoAtivo.setText("Ativo");

        textoNivel.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoNivel.setText("Nivel:");

        caixaNivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Administrador", "Funcionário" }));
        caixaNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaNivelActionPerformed(evt);
            }
        });

        campoSenha2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoSenha2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoSenha2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoSenha2FocusLost(evt);
            }
        });

        textoSenha2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoSenha2.setText("Redigite a Senha:");

        textoSenha.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoSenha.setText("Senha:");

        campoSenha.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoSenhaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoSenhaFocusLost(evt);
            }
        });

        campoUser.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoUserFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoUserFocusLost(evt);
            }
        });

        textoUser.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoUser.setText("Nome de Usuário:");

        textoErroNome.setForeground(new java.awt.Color(255, 0, 0));
        textoErroNome.setText("Minímo dez caracteres");

        textoErroCpf.setForeground(new java.awt.Color(255, 0, 0));
        textoErroCpf.setText("CPF Inválido");

        textoErroEmail.setForeground(new java.awt.Color(255, 0, 0));
        textoErroEmail.setText("E-mail Inválido");

        textoErroCel.setForeground(new java.awt.Color(255, 0, 0));
        textoErroCel.setText("Minímo oito caracteres");

        textoErroUser.setForeground(new java.awt.Color(255, 0, 0));
        textoErroUser.setText("Minímo três caracteres");

        textoErroPass1.setForeground(new java.awt.Color(255, 0, 0));
        textoErroPass1.setText("Minímo cinco caracteres");

        textoErroPass2.setForeground(new java.awt.Color(255, 0, 0));
        textoErroPass2.setText("Senhas não conferem");

        textoErroNivel.setForeground(new java.awt.Color(255, 0, 0));
        textoErroNivel.setText("Selecione o nivel");

        textoErroAtivo.setForeground(new java.awt.Color(255, 0, 0));
        textoErroAtivo.setText("Selecione se esta ativo ou não");

        javax.swing.GroupLayout painelAdicionarModificarFuncionariosLayout = new javax.swing.GroupLayout(painelAdicionarModificarFuncionarios);
        painelAdicionarModificarFuncionarios.setLayout(painelAdicionarModificarFuncionariosLayout);
        painelAdicionarModificarFuncionariosLayout.setHorizontalGroup(
            painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textoNome)
                                    .addComponent(textoId))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoNome)))
                            .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textoCpf)
                                    .addComponent(textoEmail)
                                    .addComponent(textoTelefone))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoEmail)
                                    .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                                        .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(campoTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(campoCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textoErroCpf)
                                            .addComponent(textoErroEmail))
                                        .addGap(0, 68, Short.MAX_VALUE))))))
                    .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                        .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(textoErroNome))
                            .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                                        .addComponent(textoCelular)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(campoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                                        .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textoSenha2)
                                            .addComponent(textoNivel)
                                            .addComponent(textoAtivo))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(caixaAtivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(caixaNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textoErroNivel)
                                            .addComponent(textoErroAtivo)))
                                    .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(campoSenha2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                                            .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(textoUser)
                                                .addComponent(textoSenha))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(textoErroCel)
                                                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(campoUser)
                                                    .addComponent(campoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(textoErroUser))))
                                    .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                                        .addGap(128, 128, 128)
                                        .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textoErroPass1)
                                            .addComponent(textoErroPass2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        painelAdicionarModificarFuncionariosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {textoAtivo, textoCelular, textoCpf, textoEmail, textoId, textoNivel, textoNome, textoSenha, textoSenha2, textoTelefone, textoUser});

        painelAdicionarModificarFuncionariosLayout.setVerticalGroup(
            painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoId)
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoNome)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoErroNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoCpf)
                    .addComponent(campoCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoErroCpf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoEmail)
                    .addComponent(campoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoErroEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoTelefone)
                    .addComponent(campoTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoCelular)
                    .addComponent(campoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoErroCel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoUser)
                    .addComponent(campoUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoErroUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoSenha)
                    .addComponent(campoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoErroPass1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoSenha2)
                    .addComponent(campoSenha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoErroPass2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoNivel)
                    .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                        .addComponent(caixaNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textoErroNivel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                        .addComponent(textoAtivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelAdicionarModificarFuncionariosLayout.createSequentialGroup()
                        .addComponent(caixaAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textoErroAtivo)))
                .addGap(20, 20, 20))
        );

        painelProcurarFuncionarios.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Procurar Funcionário Existente"));

        textoProcurarFuncionario.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoProcurarFuncionario.setText("Procurar Funcionário:");

        campoPesquisarFuncionario.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoPesquisarFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoPesquisarFuncionarioFocusGained(evt);
            }
        });
        campoPesquisarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPesquisarFuncionarioActionPerformed(evt);
            }
        });

        botaoProcurarFuncionario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoProcurarFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/search-26.png"))); // NOI18N
        botaoProcurarFuncionario.setText("Procurar");
        botaoProcurarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoProcurarFuncionarioActionPerformed(evt);
            }
        });

        textoCliqueParaEditar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoCliqueParaEditar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoCliqueParaEditar.setText("Clique no funcionário desejado na lista para editá-lo no painel ao lado:");

        tabelaFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Usuário", "Nível"
            }
        ));
        jScrollPane1.setViewportView(tabelaFuncionarios);
        if (tabelaFuncionarios.getColumnModel().getColumnCount() > 0) {
            tabelaFuncionarios.getColumnModel().getColumn(0).setMaxWidth(75);
            tabelaFuncionarios.getColumnModel().getColumn(2).setMaxWidth(250);
            tabelaFuncionarios.getColumnModel().getColumn(3).setMaxWidth(35);
        }

        javax.swing.GroupLayout painelProcurarFuncionariosLayout = new javax.swing.GroupLayout(painelProcurarFuncionarios);
        painelProcurarFuncionarios.setLayout(painelProcurarFuncionariosLayout);
        painelProcurarFuncionariosLayout.setHorizontalGroup(
            painelProcurarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelProcurarFuncionariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelProcurarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelProcurarFuncionariosLayout.createSequentialGroup()
                        .addComponent(textoProcurarFuncionario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(campoPesquisarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoProcurarFuncionario)
                        .addGap(0, 65, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addComponent(textoCliqueParaEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        painelProcurarFuncionariosLayout.setVerticalGroup(
            painelProcurarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelProcurarFuncionariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelProcurarFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoPesquisarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoProcurarFuncionario)
                    .addComponent(botaoProcurarFuncionario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textoCliqueParaEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        botaoLimparCampos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoLimparCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/erase-32.png"))); // NOI18N
        botaoLimparCampos.setText("Limpar Campos");
        botaoLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparCamposActionPerformed(evt);
            }
        });

        botaoExcluirFuncionario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoExcluirFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/delete-32.png"))); // NOI18N
        botaoExcluirFuncionario.setText("Excluir Funcionário");
        botaoExcluirFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirFuncionarioActionPerformed(evt);
            }
        });

        botaoAtualizarFuncionario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoAtualizarFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/refresh-32.png"))); // NOI18N
        botaoAtualizarFuncionario.setText("Atualizar Funcionário");
        botaoAtualizarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarFuncionarioActionPerformed(evt);
            }
        });

        botaoCancelarCadastro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoCancelarCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/cancel-32.png"))); // NOI18N
        botaoCancelarCadastro.setText("Cancelar Cadastro");
        botaoCancelarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarCadastroActionPerformed(evt);
            }
        });

        botaoCadastrarFuncionario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoCadastrarFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/ok-32.png"))); // NOI18N
        botaoCadastrarFuncionario.setText("Cadastrar Funcionário");
        botaoCadastrarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarFuncionarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotoesLayout = new javax.swing.GroupLayout(painelBotoes);
        painelBotoes.setLayout(painelBotoesLayout);
        painelBotoesLayout.setHorizontalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoLimparCampos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoExcluirFuncionario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoAtualizarFuncionario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoCancelarCadastro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoCadastrarFuncionario)
                .addContainerGap())
        );
        painelBotoesLayout.setVerticalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCancelarCadastro)
                    .addComponent(botaoCadastrarFuncionario)
                    .addComponent(botaoLimparCampos)
                    .addComponent(botaoAtualizarFuncionario)
                    .addComponent(botaoExcluirFuncionario))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelAdicionarModificarFuncionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelProcurarFuncionarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(painelAdicionarModificarFuncionarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelProcurarFuncionarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoNomeFocusGained
        campoNome.selectAll();
    }//GEN-LAST:event_campoNomeFocusGained

    private void campoCpfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCpfFocusGained
        campoCpf.selectAll();
    }//GEN-LAST:event_campoCpfFocusGained

    private void campoEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoEmailFocusGained
        campoEmail.selectAll();
    }//GEN-LAST:event_campoEmailFocusGained

    private void campoTelefoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoTelefoneFocusGained
        campoTelefone.selectAll();
    }//GEN-LAST:event_campoTelefoneFocusGained

    private void campoCelularFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCelularFocusGained
        campoCelular.selectAll();
    }//GEN-LAST:event_campoCelularFocusGained

    private void campoUserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoUserFocusGained
        campoUser.selectAll();
    }//GEN-LAST:event_campoUserFocusGained

    private void campoSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSenhaFocusGained
        campoSenha.selectAll();
    }//GEN-LAST:event_campoSenhaFocusGained

    private void campoSenha2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSenha2FocusGained
        campoSenha2.selectAll();
    }//GEN-LAST:event_campoSenha2FocusGained

    private void campoPesquisarFuncionarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoPesquisarFuncionarioFocusGained
        campoPesquisarFuncionario.selectAll();
    }//GEN-LAST:event_campoPesquisarFuncionarioFocusGained

    private void botaoCadastrarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarFuncionarioActionPerformed
        if (valida(false)) {
            cadastrarFuncionario();
        }
    }//GEN-LAST:event_botaoCadastrarFuncionarioActionPerformed

    private void botaoLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparCamposActionPerformed
        limpaCampos();
        habilitaBotoesParaSalvar();
    }//GEN-LAST:event_botaoLimparCamposActionPerformed

    private void botaoExcluirFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirFuncionarioActionPerformed
        if (valida(true)) {
            excluirFuncionario();
            habilitaBotoesParaSalvar();
        }
    }//GEN-LAST:event_botaoExcluirFuncionarioActionPerformed

    private void botaoAtualizarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarFuncionarioActionPerformed
        if (valida(false)) {
            atualizarFuncionario();
            habilitaBotoesParaSalvar();
        }
    }//GEN-LAST:event_botaoAtualizarFuncionarioActionPerformed

    private void botaoCancelarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarCadastroActionPerformed
        this.dispose();
    }//GEN-LAST:event_botaoCancelarCadastroActionPerformed

    private void botaoProcurarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoProcurarFuncionarioActionPerformed
        pesquisaFuncionarios();
    }//GEN-LAST:event_botaoProcurarFuncionarioActionPerformed

    private void campoPesquisarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPesquisarFuncionarioActionPerformed
        pesquisaFuncionarios();
    }//GEN-LAST:event_campoPesquisarFuncionarioActionPerformed

    private void campoNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoNomeFocusLost
        valida(campoNome, 9, null, 0, textoErroNome);
    }//GEN-LAST:event_campoNomeFocusLost

    private void campoCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCpfFocusLost
        valida(campoCpf, 10, null, 1, textoErroCpf);
    }//GEN-LAST:event_campoCpfFocusLost

    private void campoEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoEmailFocusLost
        valida(campoEmail, 0, null, 2, textoErroEmail);
    }//GEN-LAST:event_campoEmailFocusLost

    private void campoCelularFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCelularFocusLost
        valida(campoCelular, 7, null, 3, textoErroCel);
    }//GEN-LAST:event_campoCelularFocusLost

    private void campoUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoUserFocusLost
        valida(campoUser, 2, null, 4, textoErroUser);
    }//GEN-LAST:event_campoUserFocusLost

    private void campoSenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSenhaFocusLost
        valida(campoSenha, 4, null, 5, textoErroPass1);
    }//GEN-LAST:event_campoSenhaFocusLost

    private void campoSenha2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSenha2FocusLost
        validaSenha2();
    }//GEN-LAST:event_campoSenha2FocusLost

    private void caixaNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaNivelActionPerformed
        valida(null, null, caixaNivel, 7, textoErroNivel);
    }//GEN-LAST:event_caixaNivelActionPerformed

    private void caixaAtivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaAtivoActionPerformed
        valida(null, null, caixaAtivo, 8, textoErroAtivo);
    }//GEN-LAST:event_caixaAtivoActionPerformed

    private void atualizarFuncionario() {
        fDao.abreConnection();
        fDao.atualizaFuncionario(formToFuncionario());
        fDao.fechaConnection();
        JOptionPane.showMessageDialog(this, "Funcionário Atualizado Com Sucesso", "Cadastro de Funcionarios", JOptionPane.INFORMATION_MESSAGE);
        limpaCampos();
        inicializaTableModel();
    }

    private void atualizaTableModel(List<Funcionario> funcionarios) {
        if (funcionarios != null && funcionarios.isEmpty()) {
            Funcionario funcionario = new Funcionario();
            funcionario.setNomeFunc("Nenhum Registro Encontrado");
            funcionarios.add(funcionario);
        }
        tableModel = new FuncionarioTableModel(funcionarios);
        tabelaFuncionarios.setModel(tableModel);
        tabelaFuncionarios.getSelectionModel().addListSelectionListener(this);
        tabelaFuncionarios.getColumnModel().getColumn(0).setMaxWidth(35);
        tabelaFuncionarios.getColumnModel().getColumn(2).setMaxWidth(250);
        tabelaFuncionarios.getColumnModel().getColumn(3).setMaxWidth(65);
    }

    private void cadastrarFuncionario() {
        fDao.abreConnection();
        Funcionario funcionario = formToFuncionario();
        if (fDao.validaCPF(funcionario.getCpfFunc())) {
            JOptionPane.showMessageDialog(this, "CPF ja cadastrado!", "Cadastro de Funcionários", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (fDao.validaUsuario(funcionario.getUserFunc())) {
            JOptionPane.showMessageDialog(this, "Usuário já existe!", "Cadastro de Funcionários", JOptionPane.WARNING_MESSAGE);
            return;
        }
        fDao.adicionaFuncionario(funcionario);
        fDao.fechaConnection();
        JOptionPane.showMessageDialog(this, "Funcionário Cadastrado Com Sucesso", "Cadastro de Funcionarios", JOptionPane.INFORMATION_MESSAGE);
        limpaCampos();
        inicializaTableModel();
    }

    private void desabilitaBotoesParaSalvar() {
        habilitaOuDesabilitaBotoesEdicao(false);
    }

    private void excluirFuncionario() {
        fDao.abreConnection();
        fDao.deletaFuncionario(formToFuncionario());
        fDao.fechaConnection();
        JOptionPane.showMessageDialog(this, "Funcionário Removido Com Sucesso", "Cadastro de Funcionarios", JOptionPane.INFORMATION_MESSAGE);
        limpaCampos();
        inicializaTableModel();
    }

    private Funcionario formToFuncionario() {
        Funcionario func = new Funcionario();
        if (!"".equals(campoId.getText())) {
            func.setIdFunc(Integer.parseInt(campoId.getText()));
        }
        func.setNomeFunc(campoNome.getText());
        func.setCpfFunc(campoCpf.getText());
        func.setMailFunc(campoEmail.getText());
        func.setFoneFunc(campoTelefone.getText());
        func.setCelFunc(campoCelular.getText());
        func.setUserFunc(campoUser.getText());

        HexSha hexSha = new HexSha(String.valueOf(campoSenha.getPassword()));
        func.setPassFunc(hexSha.ConvertSha());

        if (caixaNivel.getSelectedItem() == "Administrador") {
            func.setNivelFunc(1);
        } else {
            func.setNivelFunc(0);
        }
        if (caixaAtivo.getSelectedItem() == "Não") {
            func.setEstaAtivo((byte) 0);
        } else {
            func.setEstaAtivo((byte) 1);
        }
        return func;
    }

    private void funcionarioToForm(Funcionario funcionario) {
        campoId.setText(String.valueOf(funcionario.getIdFunc()));
        campoNome.setText(funcionario.getNomeFunc());
        campoCpf.setText(funcionario.getCpfFunc());
        campoEmail.setText(funcionario.getMailFunc());
        campoTelefone.setText(funcionario.getFoneFunc());
        campoCelular.setText(funcionario.getCelFunc());
        campoUser.setText(funcionario.getUserFunc());
        if (funcionario.getNivelFunc() == 1) {
            caixaNivel.setSelectedIndex(1);
        } else {
            caixaNivel.setSelectedIndex(2);
        }
        if ((byte) 0 == funcionario.getEstaAtivo()) {
            caixaAtivo.setSelectedIndex(1);
        } else {
            caixaAtivo.setSelectedIndex(2);
        }
        desabilitaBotoesParaSalvar();
    }

    private void habilitaBotoesParaSalvar() {
        habilitaOuDesabilitaBotoesEdicao(true);
    }

    private void habilitaOuDesabilitaBotoesEdicao(boolean enabled) {
        botaoAtualizarFuncionario.setEnabled(!enabled);
        botaoCadastrarFuncionario.setEnabled(enabled);
        botaoExcluirFuncionario.setEnabled(!enabled);
    }

    private void inicializaTableModel() {
        fDao.abreConnection();
        atualizaTableModel(fDao.getLista());
        fDao.fechaConnection();
    }

    private void limpaCampos() {
        campoCelular.setText("");
        campoCpf.setText("");
        campoEmail.setText("");
        campoNome.setText("");
        campoSenha.setText("");
        campoSenha2.setText("");
        campoTelefone.setText("");
        campoUser.setText("");
        caixaAtivo.setSelectedIndex(0);
        caixaNivel.setSelectedIndex(0);
        campoId.setText("");
        caixaAtivo.setBorder(normal);
        caixaNivel.setBorder(normal);
        campoCelular.setBorder(normal);
        campoCpf.setBorder(normal);
        campoEmail.setBorder(normal);
        campoNome.setBorder(normal);
        campoSenha.setBorder(normal);
        campoSenha2.setBorder(normal);
        campoUser.setBorder(normal);
        textoErroAtivo.setVisible(false);
        textoErroCel.setVisible(false);
        textoErroCpf.setVisible(false);
        textoErroEmail.setVisible(false);
        textoErroNivel.setVisible(false);
        textoErroNome.setVisible(false);
        textoErroPass1.setVisible(false);
        textoErroPass2.setVisible(false);
        textoErroUser.setVisible(false);
    }

    public void pesquisaFuncionarios() {
        fDao.abreConnection();
        String pesquisa = "%" + campoPesquisarFuncionario.getText() + "%";
        limpaCampos();
        atualizaTableModel(fDao.pesquisarFuncionario(pesquisa));
        fDao.fechaConnection();
    }

    public void valida(JTextField campo, Integer tamanho, JComboBox combo, int indexVetor, JLabel texto) {

        if (campo != null) {
            if (!"".equals(campo.getText()) && campo.getText().length() > tamanho) {
                campo.setBorder(normal);
                valida[indexVetor] = true;
                texto.setVisible(false);
            } else {
                campo.setBorder(vermelha);
                valida[indexVetor] = false;
                texto.setVisible(true);
            }
        }
        if (combo != null) {
            if (combo.getSelectedIndex() != 0) {
                combo.setBorder(normal);
                valida[indexVetor] = true;
                texto.setVisible(false);
            } else {
                combo.setBorder(vermelha);
                valida[indexVetor] = false;
                texto.setVisible(true);
            }
        }
    }

    public void validaSenha2() {
        if (campoSenha2 != null && campoSenha2.getText().equals(campoSenha.getText()) && campoSenha2.getText().length() > 4) {
            campoSenha2.setBorder(normal);
            valida[6] = true;
            textoErroPass2.setVisible(false);
        } else {
            campoSenha2.setBorder(vermelha);
            valida[6] = false;
            textoErroPass2.setVisible(true);
        }
    }

    public boolean valida(boolean excluir) {
        boolean validar = true;

        if (valida[0] == false) {
            valida(campoNome, 9, null, 0, textoErroNome);
            validar = false;
        }
        if (valida[1] == false) {
            valida(campoCpf, 10, null, 1, textoErroCpf);
            validar = false;
        }
        if (valida[2] == false) {
            valida(campoEmail, 0, null, 2, textoErroEmail);
            validar = false;
        }
        if (valida[3] == false) {
            valida(campoCelular, 7, null, 3, textoErroCel);
            validar = false;
        }
        if (valida[4] == false) {
            valida(campoUser, 2, null, 4, textoErroUser);
            validar = false;
        }
        if (!excluir) {
            if (valida[5] == false) {
                valida(campoSenha, 4, null, 5, textoErroPass1);
                validar = false;
            }
            if (valida[6] == false) {
                validaSenha2();
                validar = false;
            }
        }
        if (valida[7] == false) {
            valida(null, null, caixaNivel, 7, textoErroNivel);
            validar = false;
        }
        if (valida[8] == false) {
            valida(null, null, caixaAtivo, 8, textoErroAtivo);
            validar = false;
        }
        return validar;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAtualizarFuncionario;
    private javax.swing.JButton botaoCadastrarFuncionario;
    private javax.swing.JButton botaoCancelarCadastro;
    private javax.swing.JButton botaoExcluirFuncionario;
    private javax.swing.JButton botaoLimparCampos;
    private javax.swing.JButton botaoProcurarFuncionario;
    private javax.swing.JComboBox caixaAtivo;
    private javax.swing.JComboBox caixaNivel;
    private javax.swing.JTextField campoCelular;
    private javax.swing.JTextField campoCpf;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoId;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoPesquisarFuncionario;
    private javax.swing.JPasswordField campoSenha;
    private javax.swing.JPasswordField campoSenha2;
    private javax.swing.JTextField campoTelefone;
    private javax.swing.JTextField campoUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel painelAdicionarModificarFuncionarios;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JPanel painelProcurarFuncionarios;
    private javax.swing.JPanel painelSuperior;
    private javax.swing.JTable tabelaFuncionarios;
    private javax.swing.JLabel textoAdicionarNovoFuncionario;
    private javax.swing.JLabel textoAtivo;
    private javax.swing.JLabel textoCelular;
    private javax.swing.JLabel textoCliqueParaEditar;
    private javax.swing.JLabel textoCpf;
    private javax.swing.JLabel textoEmail;
    private javax.swing.JLabel textoErroAtivo;
    private javax.swing.JLabel textoErroCel;
    private javax.swing.JLabel textoErroCpf;
    private javax.swing.JLabel textoErroEmail;
    private javax.swing.JLabel textoErroNivel;
    private javax.swing.JLabel textoErroNome;
    private javax.swing.JLabel textoErroPass1;
    private javax.swing.JLabel textoErroPass2;
    private javax.swing.JLabel textoErroUser;
    private javax.swing.JLabel textoIconeNovoFuncionario;
    private javax.swing.JLabel textoId;
    private javax.swing.JLabel textoNivel;
    private javax.swing.JLabel textoNome;
    private javax.swing.JLabel textoPreencherDados;
    private javax.swing.JLabel textoProcurarFuncionario;
    private javax.swing.JLabel textoSenha;
    private javax.swing.JLabel textoSenha2;
    private javax.swing.JLabel textoTelefone;
    private javax.swing.JLabel textoUser;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (tabelaFuncionarios.getSelectedRow() != -1) {
            Funcionario funcionario = tableModel.getFuncionarios().get(tabelaFuncionarios.getSelectedRow());
            if (funcionario.getIdFunc() != 0) {
                funcionarioToForm(funcionario);
            }
        }
    }
}
