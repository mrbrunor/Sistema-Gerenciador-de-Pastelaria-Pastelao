/*
 * The MIT License
 *
 * Copyright 2014 BrunoRicardo.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.au.gui;

import com.au.bean.Caixa;
import com.au.bean.FormaPagamento;
import com.au.bean.Funcionario;
import com.au.bean.Pedido;
import com.au.dao.CaixaDao;
import com.au.dao.FormaPagamentoDao;
import com.au.util.CustomComboBoxInt;
import com.au.dao.ItemPedidoDao;
import com.au.dao.PedidoDao;
import com.au.gui.tmodel.VendaTableModel;
import com.au.util.Imprime;
import com.au.util.LimitaDigitos;
import java.awt.Color;
import java.sql.Time;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.MatteBorder;

/**
 *
 * @author BrunoRicardo
 */
public class TelaConfirmacaoPagamento extends javax.swing.JDialog {

    private Funcionario funcionario = new Funcionario();
    private Pedido pedido = new Pedido();
    private final CaixaDao cDao = new CaixaDao();
    private final PedidoDao pDao = new PedidoDao();
    private final ItemPedidoDao ipDao = new ItemPedidoDao();
    private final FormaPagamentoDao fpDao = new FormaPagamentoDao();
    private static Caixa caixa = null;
    private Integer idCaixa = null;
    private double subTotal = 0;
    private double total = 0;
    private static boolean pagou = false;
    private List<FormaPagamento> listaResFormasPagamento;
    private VendaTableModel tableModelVenda;
    private final Border vermelha = new MatteBorder(1, 1, 1, 1, Color.red);
    private final Border normal;
    private double valorTotal = 0;

    public TelaConfirmacaoPagamento(java.awt.Frame parent, boolean modal, Funcionario funcionario, Pedido pedido, Integer idCaixa, Double subTotal) {
        super(parent, modal);
        this.pedido = pedido;
        this.funcionario = funcionario;
        this.idCaixa = idCaixa;
        this.subTotal = subTotal;
        buscaFormasPagamento();
        initComponents();
        normal = campoDesconto.getBorder();
        atualizaTableModelVenda();
        campoDesconto.requestFocus();
        textoValorTotal.setText(String.format("<html>Valor Total: <b>%.2f", subTotal));
        campoDesconto.setDocument(new LimitaDigitos((8), "[^0-9\\.]"));
        campoMesa.setDocument(new LimitaDigitos((2), "[^0-9]"));
        campoValorRecebido.setDocument(new LimitaDigitos((6), "[^0-9\\.]"));
        caixaSelecaoCC.setVisible(false);
        caixaSelecaoCD.setVisible(false);
        caixaSelecaoVR.setVisible(false);
        campoValorRecebido.setVisible(false);
        textoValorRecebido.setVisible(false);
        campoValorRecebidoVR.setVisible(false);
        textoValorRecebidoVR.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        painelDadosPedido = new javax.swing.JPanel();
        campoDesconto = new javax.swing.JTextField();
        campoDesconto.setActionCommand("Desconto");
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPedido = new javax.swing.JTable();
        textoConfiraDadosPedido = new javax.swing.JLabel();
        textoValorTotal = new javax.swing.JLabel();
        textoDesconto = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        painelFormasDePagamento = new javax.swing.JPanel();
        textoSelecioneFormaPagamento = new javax.swing.JLabel();
        botaoRadioDinheiro = new javax.swing.JRadioButton();
        botaoRadioCartaoCredito = new javax.swing.JRadioButton();
        botaoRadioValeRefeicao = new javax.swing.JRadioButton();
        botaoCartaoDebito = new javax.swing.JRadioButton();
        caixaSelecaoCC = new javax.swing.JComboBox(getFormasCredito());
        caixaSelecaoCD = new javax.swing.JComboBox(getFormasDebito());
        caixaSelecaoVR = new javax.swing.JComboBox(getFormasVale());
        textoIconeDinheiro = new javax.swing.JLabel();
        textoIconeCD = new javax.swing.JLabel();
        textoIconeCC = new javax.swing.JLabel();
        textoIconeVR = new javax.swing.JLabel();
        campoValorRecebido = new javax.swing.JTextField();
        textoValorRecebido = new javax.swing.JLabel();
        textoValorRecebidoVR = new javax.swing.JLabel();
        campoValorRecebidoVR = new javax.swing.JTextField();
        botaoConfirmarPedido = new javax.swing.JButton();
        botaoCancelarPedido = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        botaoRadioBalcao = new javax.swing.JRadioButton();
        botaoRadioMesa = new javax.swing.JRadioButton();
        botaoRadioViagem = new javax.swing.JRadioButton();
        campoMesa = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Confirmação de Pedido");
        setAlwaysOnTop(true);
        setResizable(false);

        painelDadosPedido.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados do Pedido"));

        campoDesconto.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        campoDesconto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoDesconto.setText("0");
        campoDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDescontoActionPerformed(evt);
            }
        });
        campoDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoDescontoKeyReleased(evt);
            }
        });

        tabelaPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "Descrição", "Valor Unitario", "Quantidade", "Valor Total"
            }
        ));
        jScrollPane1.setViewportView(tabelaPedido);
        if (tabelaPedido.getColumnModel().getColumnCount() > 0) {
            tabelaPedido.getColumnModel().getColumn(0).setMaxWidth(35);
            tabelaPedido.getColumnModel().getColumn(2).setMaxWidth(100);
            tabelaPedido.getColumnModel().getColumn(3).setMaxWidth(75);
            tabelaPedido.getColumnModel().getColumn(4).setMaxWidth(75);
        }

        textoConfiraDadosPedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textoConfiraDadosPedido.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoConfiraDadosPedido.setText("Confira abaixo os dados do pedido:");

        textoValorTotal.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        textoValorTotal.setText("VALOR TOTAL:");

        textoDesconto.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        textoDesconto.setText("<html><b><u>D</u></b>ESCONTO:");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout painelDadosPedidoLayout = new javax.swing.GroupLayout(painelDadosPedido);
        painelDadosPedido.setLayout(painelDadosPedidoLayout);
        painelDadosPedidoLayout.setHorizontalGroup(
            painelDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(textoConfiraDadosPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelDadosPedidoLayout.createSequentialGroup()
                        .addComponent(textoDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(campoDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1)
                        .addGap(18, 18, 18)
                        .addComponent(textoValorTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelDadosPedidoLayout.setVerticalGroup(
            painelDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosPedidoLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(textoConfiraDadosPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textoValorTotal)
                    .addComponent(textoDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painelDadosPedidoLayout.createSequentialGroup()
                        .addComponent(campoDesconto)
                        .addGap(2, 2, 2))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );

        painelFormasDePagamento.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Formas de Pagamento"));

        textoSelecioneFormaPagamento.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoSelecioneFormaPagamento.setText("Selecione a forma de pagamento utilizada:");

        buttonGroup1.add(botaoRadioDinheiro);
        botaoRadioDinheiro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoRadioDinheiro.setText("<html>D<b><u>i</u></b>nheiro");
        botaoRadioDinheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRadioDinheiroActionPerformed(evt);
            }
        });

        buttonGroup1.add(botaoRadioCartaoCredito);
        botaoRadioCartaoCredito.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoRadioCartaoCredito.setText("<html>Cartão de <b><u>C</u></b>rédito");
        botaoRadioCartaoCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRadioCartaoCreditoActionPerformed(evt);
            }
        });

        buttonGroup1.add(botaoRadioValeRefeicao);
        botaoRadioValeRefeicao.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoRadioValeRefeicao.setText("<html>Vale <b><u>R</u></b>efeição");
        botaoRadioValeRefeicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRadioValeRefeicaoActionPerformed(evt);
            }
        });

        buttonGroup1.add(botaoCartaoDebito);
        botaoCartaoDebito.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoCartaoDebito.setText("<html>Cartão de D<b><u>é</u></b>bito");
        botaoCartaoDebito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCartaoDebitoActionPerformed(evt);
            }
        });

        textoIconeDinheiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/banknotes-26.png"))); // NOI18N

        textoIconeCD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/bank_cards-26.png"))); // NOI18N

        textoIconeCC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/mastercard-26.png"))); // NOI18N

        textoIconeVR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/barcode-26.png"))); // NOI18N

        campoValorRecebido.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoValorRecebido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoValorRecebidoKeyReleased(evt);
            }
        });

        textoValorRecebido.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoValorRecebido.setText("Valor Recebido:");

        textoValorRecebidoVR.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoValorRecebidoVR.setText("Valor Recebido:");

        campoValorRecebidoVR.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoValorRecebidoVR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoValorRecebidoVRKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout painelFormasDePagamentoLayout = new javax.swing.GroupLayout(painelFormasDePagamento);
        painelFormasDePagamento.setLayout(painelFormasDePagamentoLayout);
        painelFormasDePagamentoLayout.setHorizontalGroup(
            painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoSelecioneFormaPagamento)
                    .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                        .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(botaoRadioDinheiro, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textoIconeDinheiro))
                            .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                                .addComponent(textoValorRecebido)
                                .addGap(13, 13, 13)
                                .addComponent(campoValorRecebido, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(caixaSelecaoCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                                .addComponent(botaoRadioCartaoCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textoIconeCC)))
                        .addGap(18, 18, 18)
                        .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(caixaSelecaoCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                                .addComponent(botaoCartaoDebito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textoIconeCD)))
                        .addGap(18, 18, 18)
                        .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(caixaSelecaoVR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                                .addComponent(botaoRadioValeRefeicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textoIconeVR))
                            .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                                .addComponent(textoValorRecebidoVR)
                                .addGap(13, 13, 13)
                                .addComponent(campoValorRecebidoVR, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        painelFormasDePagamentoLayout.setVerticalGroup(
            painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoSelecioneFormaPagamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                        .addComponent(botaoRadioCartaoCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(caixaSelecaoCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                        .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoCartaoDebito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textoIconeCC))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(caixaSelecaoCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                        .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoIconeVR)
                            .addComponent(botaoRadioValeRefeicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textoIconeCD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(caixaSelecaoVR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                        .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoIconeDinheiro)
                            .addComponent(botaoRadioDinheiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(textoValorRecebido))
                            .addComponent(campoValorRecebido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(painelFormasDePagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelFormasDePagamentoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(textoValorRecebidoVR))
                    .addComponent(campoValorRecebidoVR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        botaoConfirmarPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoConfirmarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/ok-32.png"))); // NOI18N
        botaoConfirmarPedido.setText("Confirmar Pedido");
        botaoConfirmarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConfirmarPedidoActionPerformed(evt);
            }
        });

        botaoCancelarPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoCancelarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/cancel-32.png"))); // NOI18N
        botaoCancelarPedido.setText("Cancelar Pedido");
        botaoCancelarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarPedidoActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Forma de Consumo"));

        buttonGroup2.add(botaoRadioBalcao);
        botaoRadioBalcao.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoRadioBalcao.setText("<html><b><u>B</u></b>alcão");
        botaoRadioBalcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRadioBalcaoActionPerformed(evt);
            }
        });

        buttonGroup2.add(botaoRadioMesa);
        botaoRadioMesa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoRadioMesa.setText("<html><b><u>M</u></b>esa");
        botaoRadioMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRadioMesaActionPerformed(evt);
            }
        });

        buttonGroup2.add(botaoRadioViagem);
        botaoRadioViagem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoRadioViagem.setText("<html><b><u>V</u></b>iagem");
        botaoRadioViagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRadioViagemActionPerformed(evt);
            }
        });

        campoMesa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        campoMesa.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoRadioBalcao)
                .addGap(65, 65, 65)
                .addComponent(botaoRadioMesa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(botaoRadioViagem)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoRadioBalcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoRadioMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoRadioViagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelDadosPedido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelFormasDePagamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoCancelarPedido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoConfirmarPedido)
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelDadosPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelFormasDePagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botaoCancelarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoConfirmarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoValorRecebidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoValorRecebidoKeyReleased


    }//GEN-LAST:event_campoValorRecebidoKeyReleased

    private void campoValorRecebidoVRKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoValorRecebidoVRKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_campoValorRecebidoVRKeyReleased

    private void botaoRadioDinheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRadioDinheiroActionPerformed
        habilitaDinheiro();
        campoValorRecebido.requestFocus();
        preencheValorRecebido();
    }//GEN-LAST:event_botaoRadioDinheiroActionPerformed

    private void campoDescontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoDescontoKeyReleased
        atualizaTotal();
    }//GEN-LAST:event_campoDescontoKeyReleased

    private void botaoConfirmarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConfirmarPedidoActionPerformed
        if (valida()) {
            //Funciona, porém sem o valor preenchido, uma vez que o pedido não foi criado.... Duas soluções são possíveis: a primeira é perguntar se quer fechar para 
            //depois exibir o troco em outra mensagem separada. A segunda opção seria fazer verificações diferentes para exibir estes valores pré fechamento
            double valorRecebidoTemp = 0;
            if (botaoRadioDinheiro.isSelected()) {
                valorRecebidoTemp = Double.valueOf(campoValorRecebido.getText());
            } else if (botaoRadioValeRefeicao.isSelected()) {
                valorRecebidoTemp = Double.valueOf(campoValorRecebidoVR.getText());
            } else {
                valorRecebidoTemp = pedido.getTotPedido();
            }
            if (JOptionPane.showConfirmDialog(this, String.format("<html><center>Valor Recebido: R$ %.2f", valorRecebidoTemp) + String.format("<br/><font color=red><b>Troco: R$ %.2f</b><br/><br/>", valorRecebidoTemp - pedido.getTotPedido()) + "<font color=black>Deseja confirmar esse pedido?", "Confirmar Pedido", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION) {
                criaPedido();
                try {
                    new Imprime().geraComandaVenda(pedido.getIdPedido());
                } catch (UnsatisfiedLinkError | NoClassDefFoundError e) {
                    JOptionPane.showMessageDialog(this, "Erro ao imprimir o Cupom.\nVerifique a impressora e tente novamente.", "Erro ao Imprimir o Cupom", JOptionPane.ERROR_MESSAGE);
                }
                pagou = true;
                this.dispose();
            } else {
                return;
            }
            /* criaPedido();
             if (frm.getPedido().getFormaPagamento().getIdFormaPgto() == 1 || frm.getPedido().getFormaPagamento().getTipoFormaPgto().equals("Vale")) {
             JOptionPane.showMessageDialog(frm, String.format("Valor Recebido: R$ %.2f", frm.getPedido().getValorRecebido()) + String.format("\n<html><font color=red><b>Troco: R$ %.2f", frm.getPedido().getValorRecebido() - frm.getPedido().getTotPedido()), "Troco", JOptionPane.INFORMATION_MESSAGE);
             }
             //new Imprime().geraComandaCozinha(frm.getPedido().getIdPedido());
             try {
             new Imprime().geraComandaVenda(frm.getPedido().getIdPedido());
             } catch (UnsatisfiedLinkError | NoClassDefFoundError e) {
             JOptionPane.showMessageDialog(frm, "Erro ao imprimir o Cupom.\nVerifique a impressora e tente novamente.", "Erro ao Imprimir o Cupom", JOptionPane.ERROR_MESSAGE);
             }
             TelaConfirmacaoPagamento.setCadastrou(true);
             frm.dispose(); */
        }
    }//GEN-LAST:event_botaoConfirmarPedidoActionPerformed

    private void botaoRadioCartaoCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRadioCartaoCreditoActionPerformed
        habilitaCC();
    }//GEN-LAST:event_botaoRadioCartaoCreditoActionPerformed

    private void botaoCartaoDebitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCartaoDebitoActionPerformed
        habilitaCD();
    }//GEN-LAST:event_botaoCartaoDebitoActionPerformed

    private void botaoRadioValeRefeicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRadioValeRefeicaoActionPerformed
        habilitaVR();
        preencheValorRecebidoVR();
    }//GEN-LAST:event_botaoRadioValeRefeicaoActionPerformed

    private void botaoRadioBalcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRadioBalcaoActionPerformed
        habilitaMesa(false);
    }//GEN-LAST:event_botaoRadioBalcaoActionPerformed

    private void botaoRadioMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRadioMesaActionPerformed
        habilitaMesa(true);
    }//GEN-LAST:event_botaoRadioMesaActionPerformed

    private void botaoRadioViagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRadioViagemActionPerformed
        habilitaMesa(false);
    }//GEN-LAST:event_botaoRadioViagemActionPerformed

    private void botaoCancelarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarPedidoActionPerformed
        pagou = false;
    }//GEN-LAST:event_botaoCancelarPedidoActionPerformed

    private void campoDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDescontoActionPerformed
        botaoRadioDinheiro.requestFocus();
        preencheValorRecebido();
    }//GEN-LAST:event_campoDescontoActionPerformed

    public void atualizaTableModelVenda() {
        tableModelVenda = new VendaTableModel(pedido.getItempedidos());
        tabelaPedido.setModel(tableModelVenda);
        tabelaPedido.getColumnModel().getColumn(0).setMaxWidth(55);
        tabelaPedido.getColumnModel().getColumn(2).setMaxWidth(100);
        tabelaPedido.getColumnModel().getColumn(3).setMaxWidth(55);
        tabelaPedido.getColumnModel().getColumn(4).setMaxWidth(75);
    }

    private void atualizaTotal() {
        if ("".equals(campoDesconto.getText())) {
            total = subTotal;
            textoValorTotal.setText(String.format("<html>Valor Total: <b>%.2f", total));
            pedido.setSubTotPedido(total);
            pedido.setTotPedido(total);
        } else if (Double.valueOf(campoDesconto.getText()) > total) {
            JOptionPane.showMessageDialog(this, "O valor do desconto não deve ultrapassar o valor do pedido.", "Desconto de Pedido", JOptionPane.WARNING_MESSAGE);
            campoDesconto.setText("");
            atualizaTotal();
        } else {
            total = subTotal - Double.valueOf(campoDesconto.getText());
            textoValorTotal.setText(String.format("<html>Valor Total: <b>%.2f", total));
            pedido.setSubTotPedido(total);
            pedido.setTotPedido(total - Double.valueOf(campoDesconto.getText()));
        }
    }

    private void buscaFormasPagamento() {
        fpDao.abreConnection();
        listaResFormasPagamento = fpDao.getLista();
        fpDao.fechaConnection();

    }

    private void criaPedido() {
        Date data = new Date();
        pedido.setIdCaixa(idCaixa);
        pedido.setDataPedido(new java.sql.Date(data.getTime()));
        pedido.setDescPedido(Double.valueOf(campoDesconto.getText()));
        pedido.setEstadoPedido("Finalizado");
        if (botaoRadioDinheiro.isSelected()) {
            pedido.setIdFormaPgto(1);
        } else if (botaoRadioCartaoCredito.isSelected()) {
            CustomComboBoxInt ob = (CustomComboBoxInt) caixaSelecaoCC.getSelectedItem();
            pedido.setIdFormaPgto(ob.getId());
        } else if (botaoCartaoDebito.isSelected()) {
            CustomComboBoxInt ob = (CustomComboBoxInt) caixaSelecaoCD.getSelectedItem();
            pedido.setIdFormaPgto(ob.getId());
        } else if (botaoRadioValeRefeicao.isSelected()) {
            CustomComboBoxInt ob = (CustomComboBoxInt) caixaSelecaoVR.getSelectedItem();
            pedido.setIdFormaPgto(ob.getId());
        }

        pedido.setHoraPedido(new Time(data.getTime()));
        pedido.setSubTotPedido(subTotal);
        pedido.setTotPedido(total);

        if (botaoRadioBalcao.isSelected()) {
            pedido.setFormaConsumo("Balcao");
        } else if (botaoRadioMesa.isSelected()) {
            pedido.setFormaConsumo(String.format("Mesa %02d", Integer.valueOf(campoMesa.getText())));
        } else if (botaoRadioViagem.isSelected()) {
            pedido.setFormaConsumo("Viagem");
        }

        if (botaoRadioDinheiro.isSelected()) { //Preenche o valor recebido no caso de dinheiro
            pedido.setValorRecebido(Double.valueOf(campoValorRecebido.getText()));
        } else if (botaoRadioValeRefeicao.isSelected()) { //Preenche o valor recebido no caso de vale
            pedido.setValorRecebido(Double.valueOf(campoValorRecebidoVR.getText()));
        } else {
            pedido.setValorRecebido(total);
        }
        pDao.abreConnection();
        pedido.setIdPedido(pDao.adicionaPedido(pedido));
        pDao.fechaConnection();
        cDao.abreConnection();
        caixa = (cDao.listaCaixaPorId(idCaixa));
        caixa.setTotalCaixa(caixa.getTotalCaixa() + pedido.getTotPedido());
        cDao.atualizaCaixa(caixa);
        cDao.fechaConnection();
        if (pedido.getItempedidos() != null) {
            ipDao.abreConnection();
            for (int i = 0; pedido.getItempedidos().size() > i; i++) {
                pedido.getItempedidos().get(i).setIdPedido(pedido.getIdPedido());
                ipDao.adicionaItemPedido(pedido.getItempedidos().get(i));
            }
            ipDao.fechaConnection();
        }
    }

    private CustomComboBoxInt[] getFormasDebito() {
        List<FormaPagamento> listaResFormasDebito = new ArrayList<>();
        if (listaResFormasPagamento != null) {
            for (int i = 0; listaResFormasPagamento.size() > i; i++) {
                if ("Debito".equals(listaResFormasPagamento.get(i).getTipoFormaPgto()) && listaResFormasPagamento.get(i).getEstaAtivo() == ((byte) 1)) {
                    listaResFormasDebito.add(listaResFormasPagamento.get(i));
                }
            }
        }
        CustomComboBoxInt[] oItems = new CustomComboBoxInt[listaResFormasDebito.size()];
        for (int i = 0; i < listaResFormasDebito.size(); i++) {
            oItems[i] = new CustomComboBoxInt(listaResFormasDebito.get(i).getNomeFormaPgto(), listaResFormasDebito.get(i).getIdFormaPgto());
        }
        return oItems;
    }

    private CustomComboBoxInt[] getFormasCredito() {
        List<FormaPagamento> listaResFormasCredito = new ArrayList<>();
        if (listaResFormasPagamento != null) {
            for (int i = 0; listaResFormasPagamento.size() > i; i++) {
                if ("Credito".equals(listaResFormasPagamento.get(i).getTipoFormaPgto()) && listaResFormasPagamento.get(i).getEstaAtivo() == ((byte) 1)) {
                    listaResFormasCredito.add(listaResFormasPagamento.get(i));
                }
            }
        }
        CustomComboBoxInt[] oItems = new CustomComboBoxInt[listaResFormasCredito.size()];
        for (int i = 0; i < listaResFormasCredito.size(); i++) {
            oItems[i] = new CustomComboBoxInt(listaResFormasCredito.get(i).getNomeFormaPgto(), listaResFormasCredito.get(i).getIdFormaPgto());
        }
        return oItems;
    }

    private CustomComboBoxInt[] getFormasVale() {
        List<FormaPagamento> listaResFormasVale = new ArrayList<>();
        if (listaResFormasPagamento != null) {
            for (int i = 0; listaResFormasPagamento.size() > i; i++) {
                if ("Vale".equals(listaResFormasPagamento.get(i).getTipoFormaPgto()) && listaResFormasPagamento.get(i).getEstaAtivo() == ((byte) 1)) {
                    listaResFormasVale.add(listaResFormasPagamento.get(i));
                }
            }
        }
        CustomComboBoxInt[] oItems = new CustomComboBoxInt[listaResFormasVale.size()];
        for (int i = 0; i < listaResFormasVale.size(); i++) {
            oItems[i] = new CustomComboBoxInt(listaResFormasVale.get(i).getNomeFormaPgto(), listaResFormasVale.get(i).getIdFormaPgto());
        }
        return oItems;
    }

    public void habilitaDinheiro() {
        limpaBordaPagamento();
        campoValorRecebido.setText("");
        textoValorRecebido.setVisible(true);
        campoValorRecebido.setVisible(true);
        campoValorRecebidoVR.setText("");
        campoValorRecebidoVR.setVisible(false);
        textoValorRecebidoVR.setVisible(false);
        caixaSelecaoCC.setVisible(false);
        caixaSelecaoCC.setSelectedIndex(-1);
        caixaSelecaoCD.setVisible(false);
        caixaSelecaoCD.setSelectedIndex(-1);
        caixaSelecaoVR.setVisible(false);
        caixaSelecaoVR.setSelectedIndex(-1);
    }

    public void habilitaCC() {
        limpaBordaPagamento();
        campoValorRecebido.setText("");
        textoValorRecebido.setVisible(false);
        campoValorRecebido.setVisible(false);
        campoValorRecebidoVR.setText("");
        textoValorRecebidoVR.setVisible(false);
        campoValorRecebidoVR.setVisible(false);
        caixaSelecaoCC.setVisible(true);
        caixaSelecaoCC.requestFocus();
        caixaSelecaoCC.setSelectedIndex(-1);
        caixaSelecaoCD.setVisible(false);
        caixaSelecaoCD.setSelectedIndex(-1);
        caixaSelecaoVR.setVisible(false);
        caixaSelecaoVR.setSelectedIndex(-1);
    }

    public void habilitaCD() {
        limpaBordaPagamento();
        campoValorRecebido.setText("");
        textoValorRecebido.setVisible(false);
        campoValorRecebido.setVisible(false);
        campoValorRecebidoVR.setText("");
        textoValorRecebidoVR.setVisible(false);
        campoValorRecebidoVR.setVisible(false);
        caixaSelecaoCC.setVisible(false);
        caixaSelecaoCC.setSelectedIndex(-1);
        caixaSelecaoCD.setVisible(true);
        caixaSelecaoCD.requestFocus();
        caixaSelecaoCD.setSelectedIndex(-1);
        caixaSelecaoVR.setVisible(false);
        caixaSelecaoVR.setSelectedIndex(-1);
    }

    public void habilitaVR() {
        limpaBordaPagamento();
        campoValorRecebidoVR.setText("");
        textoValorRecebidoVR.setVisible(true);
        campoValorRecebidoVR.setVisible(true);
        campoValorRecebido.setText("");
        textoValorRecebido.setVisible(false);
        campoValorRecebido.setVisible(false);
        caixaSelecaoCC.setVisible(false);
        caixaSelecaoCC.setSelectedIndex(-1);
        caixaSelecaoCD.setVisible(false);
        caixaSelecaoCD.setSelectedIndex(-1);
        caixaSelecaoVR.setVisible(true);
        caixaSelecaoVR.requestFocus();
        caixaSelecaoVR.setSelectedIndex(-1);
    }

    public void habilitaMesa(boolean valida) {
        limpaBordaConsumo();
        campoMesa.setEnabled(valida);
        campoMesa.setText("");
    }

    public void limpaBordaConsumo() {
        botaoRadioBalcao.setBorderPainted(false);
        botaoRadioMesa.setBorderPainted(false);
        botaoRadioViagem.setBorderPainted(false);
        campoMesa.setBorder(normal);
    }

    public void limpaBordaPagamento() {
        botaoCartaoDebito.setBorderPainted(false);
        botaoRadioCartaoCredito.setBorderPainted(false);
        botaoRadioDinheiro.setBorderPainted(false);
        botaoRadioValeRefeicao.setBorderPainted(false);
        caixaSelecaoCC.setBorder(normal);
        caixaSelecaoCD.setBorder(normal);
        caixaSelecaoVR.setBorder(normal);
        campoValorRecebido.setBorder(normal);
        campoValorRecebidoVR.setBorder(normal);
    }

    public void preencheValorRecebido() {
        campoValorRecebido.setText(String.valueOf(pedido.getTotPedido())); //Necessario acertar troco E Desconto
        campoValorRecebido.selectAll(); // Seleciona o texto, para caso seja necessário inserir um novo valor não seja necessário ficar dando backspace
    }

    public void preencheValorRecebidoVR() {
        campoValorRecebidoVR.setText(String.valueOf(pedido.getTotPedido())); //Preenche o campo de valor recebido do Vale
    }

    public boolean valida() {
        boolean valida = true;
        if ("".equals(campoDesconto.getText())) {
            campoDesconto.setText("0");
            atualizaTotal();
        } else if (Double.valueOf(campoDesconto.getText()) > subTotal) {
            JOptionPane.showMessageDialog(this, "O valor do desconto não deve ultrapassar o valor do pedido.", "Desconto de Pedido", JOptionPane.WARNING_MESSAGE);
            campoDesconto.setText("");
            atualizaTotal();
            valida = false;
        }

        if (botaoRadioDinheiro.isSelected() || botaoRadioCartaoCredito.isSelected() || botaoCartaoDebito.isSelected() || botaoRadioValeRefeicao.isSelected()) {
            limpaBordaPagamento();
        } else {
            valida = false;
            botaoCartaoDebito.setBorder(vermelha);
            botaoCartaoDebito.setBorderPainted(true);
            botaoRadioCartaoCredito.setBorder(vermelha);
            botaoRadioCartaoCredito.setBorderPainted(true);
            botaoRadioDinheiro.setBorder(vermelha);
            botaoRadioDinheiro.setBorderPainted(true);
            botaoRadioValeRefeicao.setBorder(vermelha);
            botaoRadioValeRefeicao.setBorderPainted(true);
        }
        if (botaoRadioDinheiro.isSelected()) {
            if (campoValorRecebido.getText().equals("")) {
                valida = false;
                campoValorRecebido.setBorder(vermelha);
            } else {
                if (Double.valueOf(campoValorRecebido.getText()) < total) {
                    JOptionPane.showMessageDialog(this, "O valor recebido não pode ser inferior ao total do pedido.", "Valor Recebido", JOptionPane.WARNING_MESSAGE);
                    campoValorRecebido.setText("");
                    atualizaTotal();
                    valida = false;
                }
                campoValorRecebido.setBorder(normal);
            }
        }
        if (botaoRadioCartaoCredito.isSelected()) {
            if (caixaSelecaoCC.getSelectedIndex() == -1) {
                valida = false;
                caixaSelecaoCC.setBorder(vermelha);
            }
        } else {
            caixaSelecaoCC.setBorder(normal);
        }
        if (botaoCartaoDebito.isSelected()) {
            if (caixaSelecaoCD.getSelectedIndex() == -1) {
                valida = false;
                caixaSelecaoCD.setBorder(vermelha);
            }
        } else {
            caixaSelecaoCD.setBorder(normal);
        }
        if (botaoRadioValeRefeicao.isSelected()) {
            if (caixaSelecaoVR.getSelectedIndex() == -1) {
                valida = false;
                caixaSelecaoVR.setBorder(vermelha);
                if (campoValorRecebidoVR.getText().equals("")) {
                    campoValorRecebidoVR.setBorder(vermelha);
                }
            } else if (campoValorRecebidoVR.getText().equals("")) {
                valida = false;
                campoValorRecebidoVR.setBorder(vermelha);
            } else {
                if (Double.valueOf(campoValorRecebidoVR.getText()) < total) {
                    JOptionPane.showMessageDialog(this, "O valor recebido não pode ser inferior ao total do pedido.", "Valor Recebido", JOptionPane.WARNING_MESSAGE);
                    campoValorRecebidoVR.setText("");
                    atualizaTotal();
                    valida = false;
                }
                campoValorRecebidoVR.setBorder(normal);
                caixaSelecaoVR.setBorder(normal);
            }
        }
        if (botaoRadioBalcao.isSelected() || botaoRadioMesa.isSelected() || botaoRadioViagem.isSelected()) {
            limpaBordaConsumo();
        } else {
            valida = false;
            botaoRadioBalcao.setBorder(vermelha);
            botaoRadioBalcao.setBorderPainted(true);
            botaoRadioMesa.setBorder(vermelha);
            botaoRadioMesa.setBorderPainted(true);
            botaoRadioViagem.setBorder(vermelha);
            botaoRadioViagem.setBorderPainted(true);
        }

        if (botaoRadioMesa.isSelected()) {
            if (campoMesa.getText().equals("")) {
                valida = false;
                campoMesa.setBorder(vermelha);
            }
        }
        return valida;
    }
    
    public static boolean isPagou() {
        return pagou;
    }

    public static void setPagou(boolean aPagou) {
        pagou = aPagou;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelarPedido;
    private javax.swing.JRadioButton botaoCartaoDebito;
    private javax.swing.JButton botaoConfirmarPedido;
    private javax.swing.JRadioButton botaoRadioBalcao;
    private javax.swing.JRadioButton botaoRadioCartaoCredito;
    private javax.swing.JRadioButton botaoRadioDinheiro;
    private javax.swing.JRadioButton botaoRadioMesa;
    private javax.swing.JRadioButton botaoRadioValeRefeicao;
    private javax.swing.JRadioButton botaoRadioViagem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox caixaSelecaoCC;
    private javax.swing.JComboBox caixaSelecaoCD;
    private javax.swing.JComboBox caixaSelecaoVR;
    private javax.swing.JTextField campoDesconto;
    private javax.swing.JTextField campoMesa;
    private javax.swing.JTextField campoValorRecebido;
    private javax.swing.JTextField campoValorRecebidoVR;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel painelDadosPedido;
    private javax.swing.JPanel painelFormasDePagamento;
    private javax.swing.JTable tabelaPedido;
    private javax.swing.JLabel textoConfiraDadosPedido;
    private javax.swing.JLabel textoDesconto;
    private javax.swing.JLabel textoIconeCC;
    private javax.swing.JLabel textoIconeCD;
    private javax.swing.JLabel textoIconeDinheiro;
    private javax.swing.JLabel textoIconeVR;
    private javax.swing.JLabel textoSelecioneFormaPagamento;
    private javax.swing.JLabel textoValorRecebido;
    private javax.swing.JLabel textoValorRecebidoVR;
    private javax.swing.JLabel textoValorTotal;
    // End of variables declaration//GEN-END:variables
}
