/*
 * The MIT License
 *
 * Copyright 2014 tiago_000.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.au.gui;

import com.au.bean.Ingrediente;
import com.au.dao.IngredienteDao;
import com.au.gui.tmodel.IngredienteTableModel;
import com.au.util.LimitaDigitos;
import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.MatteBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author tiago_000
 */
public class TelaCadastrarIngrediente extends javax.swing.JDialog implements ListSelectionListener {

    private IngredienteTableModel tableModel;
    private final Border vermelha = new MatteBorder(1, 1, 1, 1, Color.red);
    private final Border normal;
    private IngredienteDao iDao = new IngredienteDao();

    /**
     * Creates new form TelaCadastrarUsuario
     *
     * @param parent
     * @param modal
     */
    public TelaCadastrarIngrediente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        campoId.setEditable(false);
        campoNome.setDocument(new LimitaDigitos((250), "[^a-zA-Z À-ÄÈ-ËÌ-ÏÒ-ÖÙ-Üà-äè-ëì-ïò-öù-üçÇ]"));
        campoValor.setDocument(new LimitaDigitos((7), "[^0-9\\.]"));
        campoPesquisarIngrediente.setDocument(new LimitaDigitos((250), "[^a-zA-Z À-ÄÈ-ËÌ-ÏÒ-ÖÙ-Üà-äè-ëì-ïò-öù-ü0-9çÇ]"));
        normal = campoNome.getBorder();
        inicializaTableModel();
        habilitaBotoesParaSalvar();
        campoNome.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        painelSuperior = new javax.swing.JPanel();
        textoAdicionarIngrediente = new javax.swing.JLabel();
        textoIconeNovoIngrediente = new javax.swing.JLabel();
        textoPreencherDados = new javax.swing.JLabel();
        painelAdicionarModificarIngredientes = new javax.swing.JPanel();
        campoValor = new javax.swing.JTextField();
        textoValor = new javax.swing.JLabel();
        textoNome = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        campoId = new javax.swing.JTextField();
        textoId = new javax.swing.JLabel();
        painelProcurarIngredientes = new javax.swing.JPanel();
        campoPesquisarIngrediente = new javax.swing.JTextField();
        botaoProcurarIngrediente = new javax.swing.JButton();
        textoProcurarIngrediente = new javax.swing.JLabel();
        textoCliqueParaEditar = new javax.swing.JLabel();
        painelScrollTabela = new javax.swing.JScrollPane();
        tabelaIngredientes = new javax.swing.JTable();
        painelBotoes = new javax.swing.JPanel();
        botaoCancelarIngrediente = new javax.swing.JButton();
        botaoCadastrarIngrediente = new javax.swing.JButton();
        botaoLimparCampos = new javax.swing.JButton();
        botaoAtualizarIngrediente = new javax.swing.JButton();
        botaoExcluirIngrediente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        painelSuperior.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        textoAdicionarIngrediente.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        textoAdicionarIngrediente.setText("Adicionar Novo Ingrediente");

        textoIconeNovoIngrediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/eggs-64.png"))); // NOI18N

        textoPreencherDados.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        textoPreencherDados.setText("Preencha os dados abaixo para adicionar um novo ingrediente.");

        javax.swing.GroupLayout painelSuperiorLayout = new javax.swing.GroupLayout(painelSuperior);
        painelSuperior.setLayout(painelSuperiorLayout);
        painelSuperiorLayout.setHorizontalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoIconeNovoIngrediente)
                .addGap(18, 18, 18)
                .addGroup(painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoAdicionarIngrediente)
                    .addComponent(textoPreencherDados))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelSuperiorLayout.setVerticalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoIconeNovoIngrediente)
                    .addGroup(painelSuperiorLayout.createSequentialGroup()
                        .addComponent(textoAdicionarIngrediente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textoPreencherDados)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelAdicionarModificarIngredientes.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Adicionar/Modificar Ingrediente"));

        campoValor.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoValorFocusGained(evt);
            }
        });

        textoValor.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoValor.setText("Valor Ingrediente:");

        textoNome.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoNome.setText("Nome Ingrediente:");

        campoNome.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoNomeFocusGained(evt);
            }
        });

        campoId.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoId.setEnabled(false);

        textoId.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoId.setText("ID do Ingrediente:");

        javax.swing.GroupLayout painelAdicionarModificarIngredientesLayout = new javax.swing.GroupLayout(painelAdicionarModificarIngredientes);
        painelAdicionarModificarIngredientes.setLayout(painelAdicionarModificarIngredientesLayout);
        painelAdicionarModificarIngredientesLayout.setHorizontalGroup(
            painelAdicionarModificarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAdicionarModificarIngredientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAdicionarModificarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textoValor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textoNome, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoValor, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        painelAdicionarModificarIngredientesLayout.setVerticalGroup(
            painelAdicionarModificarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAdicionarModificarIngredientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAdicionarModificarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoId)
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAdicionarModificarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoValor)
                    .addComponent(campoValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(377, Short.MAX_VALUE))
        );

        painelProcurarIngredientes.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Procurar Ingrediente Existente"));

        campoPesquisarIngrediente.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoPesquisarIngrediente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoPesquisarIngredienteFocusGained(evt);
            }
        });
        campoPesquisarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPesquisarIngredienteActionPerformed(evt);
            }
        });

        botaoProcurarIngrediente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoProcurarIngrediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/search-26.png"))); // NOI18N
        botaoProcurarIngrediente.setText("Procurar");
        botaoProcurarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoProcurarIngredienteActionPerformed(evt);
            }
        });

        textoProcurarIngrediente.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoProcurarIngrediente.setText("Procurar Ingrediente:");

        textoCliqueParaEditar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoCliqueParaEditar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoCliqueParaEditar.setText("Clique no ingrediente desejado na lista para editá-lo no painel ao lado:");

        tabelaIngredientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Descrição", "Valor"
            }
        ));
        painelScrollTabela.setViewportView(tabelaIngredientes);
        if (tabelaIngredientes.getColumnModel().getColumnCount() > 0) {
            tabelaIngredientes.getColumnModel().getColumn(0).setMaxWidth(35);
            tabelaIngredientes.getColumnModel().getColumn(2).setMaxWidth(75);
        }

        javax.swing.GroupLayout painelProcurarIngredientesLayout = new javax.swing.GroupLayout(painelProcurarIngredientes);
        painelProcurarIngredientes.setLayout(painelProcurarIngredientesLayout);
        painelProcurarIngredientesLayout.setHorizontalGroup(
            painelProcurarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelProcurarIngredientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelProcurarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelScrollTabela)
                    .addGroup(painelProcurarIngredientesLayout.createSequentialGroup()
                        .addGroup(painelProcurarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textoCliqueParaEditar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(painelProcurarIngredientesLayout.createSequentialGroup()
                                .addComponent(textoProcurarIngrediente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoPesquisarIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botaoProcurarIngrediente)))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelProcurarIngredientesLayout.setVerticalGroup(
            painelProcurarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelProcurarIngredientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelProcurarIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoPesquisarIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoProcurarIngrediente)
                    .addComponent(botaoProcurarIngrediente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textoCliqueParaEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelScrollTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        botaoCancelarIngrediente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoCancelarIngrediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/cancel-32.png"))); // NOI18N
        botaoCancelarIngrediente.setText("Cancelar Cadastro");
        botaoCancelarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarIngredienteActionPerformed(evt);
            }
        });

        botaoCadastrarIngrediente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoCadastrarIngrediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/ok-32.png"))); // NOI18N
        botaoCadastrarIngrediente.setText("Cadastrar Ingrediente");
        botaoCadastrarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarIngredienteActionPerformed(evt);
            }
        });

        botaoLimparCampos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoLimparCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/erase-32.png"))); // NOI18N
        botaoLimparCampos.setText("Limpar Campos");
        botaoLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparCamposActionPerformed(evt);
            }
        });

        botaoAtualizarIngrediente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoAtualizarIngrediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/refresh-32.png"))); // NOI18N
        botaoAtualizarIngrediente.setText("Atualizar Ingrediente");
        botaoAtualizarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarIngredienteActionPerformed(evt);
            }
        });

        botaoExcluirIngrediente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaoExcluirIngrediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/delete-32.png"))); // NOI18N
        botaoExcluirIngrediente.setText("Excluir Ingrediente");
        botaoExcluirIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirIngredienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotoesLayout = new javax.swing.GroupLayout(painelBotoes);
        painelBotoes.setLayout(painelBotoesLayout);
        painelBotoesLayout.setHorizontalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoLimparCampos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoExcluirIngrediente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoAtualizarIngrediente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoCancelarIngrediente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoCadastrarIngrediente)
                .addContainerGap())
        );
        painelBotoesLayout.setVerticalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCancelarIngrediente)
                    .addComponent(botaoCadastrarIngrediente)
                    .addComponent(botaoLimparCampos)
                    .addComponent(botaoAtualizarIngrediente)
                    .addComponent(botaoExcluirIngrediente))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelAdicionarModificarIngredientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelProcurarIngredientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelProcurarIngredientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelAdicionarModificarIngredientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoNomeFocusGained
        campoNome.selectAll();
    }//GEN-LAST:event_campoNomeFocusGained

    private void campoValorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoValorFocusGained
        campoValor.selectAll();
    }//GEN-LAST:event_campoValorFocusGained

    private void campoPesquisarIngredienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoPesquisarIngredienteFocusGained
        campoPesquisarIngrediente.selectAll();
    }//GEN-LAST:event_campoPesquisarIngredienteFocusGained

    private void botaoLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparCamposActionPerformed
        limpaCampos();
        habilitaBotoesParaSalvar();
    }//GEN-LAST:event_botaoLimparCamposActionPerformed

    private void botaoExcluirIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirIngredienteActionPerformed
        if (valida()) {
            excluirIngrediente();
            habilitaBotoesParaSalvar();
        }
    }//GEN-LAST:event_botaoExcluirIngredienteActionPerformed

    private void botaoAtualizarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarIngredienteActionPerformed
        if (valida()) {
            atualizarIngrediente();
            habilitaBotoesParaSalvar();
        }
    }//GEN-LAST:event_botaoAtualizarIngredienteActionPerformed

    private void botaoCancelarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarIngredienteActionPerformed
        this.dispose();
    }//GEN-LAST:event_botaoCancelarIngredienteActionPerformed

    private void botaoCadastrarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarIngredienteActionPerformed
        if (valida()) {
            cadastrarIngrediente();
        }
    }//GEN-LAST:event_botaoCadastrarIngredienteActionPerformed

    private void botaoProcurarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoProcurarIngredienteActionPerformed
        pesquisaIngredientes();
    }//GEN-LAST:event_botaoProcurarIngredienteActionPerformed

    private void campoPesquisarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPesquisarIngredienteActionPerformed
        pesquisaIngredientes();
    }//GEN-LAST:event_campoPesquisarIngredienteActionPerformed

    private void atualizarIngrediente() {
        iDao.abreConnection();
        Ingrediente ingrediente = formToIngrediente();
        if (iDao.validaIngrediente(ingrediente.getDescIng())) {
            JOptionPane.showMessageDialog(this, "Ingrediente já cadastrado!", "Cadastro de Ingredientes", JOptionPane.WARNING_MESSAGE);
            return;
        }
        iDao.atualizaIngrediente(ingrediente);
        iDao.fechaConnection();
        JOptionPane.showMessageDialog(this, "Ingrediente Atualizado Com Sucesso", "Cadastro de Ingredientes", JOptionPane.INFORMATION_MESSAGE);
        limpaCampos();
        inicializaTableModel();
    }

    private void atualizaTableModel(List<Ingrediente> ingredientes) {
        if (ingredientes != null && ingredientes.isEmpty()) {
            Ingrediente ingrediente = new Ingrediente();
            ingrediente.setDescIng("Nenhum Registro Encontrado");
            ingredientes.add(ingrediente);
        }
        tableModel = new IngredienteTableModel(ingredientes);
        tabelaIngredientes.setModel(tableModel);
        tabelaIngredientes.getSelectionModel().addListSelectionListener(this);
        tabelaIngredientes.getColumnModel().getColumn(0).setMaxWidth(35);
        tabelaIngredientes.getColumnModel().getColumn(2).setMaxWidth(75);
    }

    private void cadastrarIngrediente() {
        iDao.abreConnection();
        Ingrediente ingrediente = formToIngrediente();
        if (iDao.validaIngrediente(ingrediente.getDescIng())) {
            JOptionPane.showMessageDialog(this, "Ingrediente já cadastrado!", "Cadastro de Ingredientes", JOptionPane.WARNING_MESSAGE);
            return;
        }
        iDao.adicionaIngrediente(ingrediente);
        iDao.fechaConnection();
        JOptionPane.showMessageDialog(this, "Ingrediente Cadastrado Com Sucesso", "Cadastro de Ingredientes", JOptionPane.INFORMATION_MESSAGE);
        limpaCampos();
        inicializaTableModel();
    }

    private void desabilitaBotoesParaSalvar() {
        habilitaOuDesabilitaBotoesEdicao(false);
    }

    private void excluirIngrediente() {
        iDao.abreConnection();
        iDao.deletaIngrediente(formToIngrediente());
        iDao.fechaConnection();
        JOptionPane.showMessageDialog(this, "Ingrediente Removido Com Sucesso", "Cadastro de Ingredientes", JOptionPane.INFORMATION_MESSAGE);
        limpaCampos();
        inicializaTableModel();
    }

    private Ingrediente formToIngrediente() {
        Ingrediente ingrediente = new Ingrediente();
        if (!"".equals(campoId.getText())) {
            ingrediente.setIdIng(Integer.valueOf(campoId.getText()));
        }
        ingrediente.setDescIng(campoNome.getText());
        ingrediente.setValorIng(Double.valueOf(campoValor.getText()));
        return ingrediente;
    }

    private void habilitaBotoesParaSalvar() {
        habilitaOuDesabilitaBotoesEdicao(true);
    }

    private void habilitaOuDesabilitaBotoesEdicao(boolean enabled) {
        botaoAtualizarIngrediente.setEnabled(!enabled);
        botaoCadastrarIngrediente.setEnabled(enabled);
        botaoExcluirIngrediente.setEnabled(!enabled);
    }

    private void ingredienteToForm(Ingrediente ingrediente) {
        campoId.setText(String.valueOf(ingrediente.getIdIng()));
        campoNome.setText(ingrediente.getDescIng());
        campoValor.setText(String.valueOf(ingrediente.getValorIng()));
        desabilitaBotoesParaSalvar();
    }

    private void inicializaTableModel() {
        iDao.abreConnection();
        atualizaTableModel(iDao.getLista());
        iDao.fechaConnection();
    }

    private void limpaCampos() {
        campoId.setText("");
        campoValor.setText("");
        campoNome.setText("");
        campoNome.setBorder(normal);
        campoValor.setBorder(normal);
    }

    private void pesquisaIngredientes() {
        iDao.abreConnection();
        String pesquisa = "%" + campoPesquisarIngrediente.getText() + "%";
        limpaCampos();
        atualizaTableModel(iDao.pesquisarIngrediente(pesquisa));
        iDao.fechaConnection();
    }

    private boolean valida() {
        boolean valida = true;
        if (!"".equals(campoNome.getText()) && campoNome.getText().length() > 2) {
            campoNome.setBorder(normal);
        } else {
            campoNome.setBorder(vermelha);
            valida = false;
        }

        if (!"".equals(campoValor.getText()) && campoValor.getText().length() > 0) {
            campoValor.setBorder(normal);
        } else {
            campoValor.setBorder(vermelha);
            valida = false;
        }
        return valida;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAtualizarIngrediente;
    private javax.swing.JButton botaoCadastrarIngrediente;
    private javax.swing.JButton botaoCancelarIngrediente;
    private javax.swing.JButton botaoExcluirIngrediente;
    private javax.swing.JButton botaoLimparCampos;
    private javax.swing.JButton botaoProcurarIngrediente;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField campoId;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoPesquisarIngrediente;
    private javax.swing.JTextField campoValor;
    private javax.swing.JPanel painelAdicionarModificarIngredientes;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JPanel painelProcurarIngredientes;
    private javax.swing.JScrollPane painelScrollTabela;
    private javax.swing.JPanel painelSuperior;
    private javax.swing.JTable tabelaIngredientes;
    private javax.swing.JLabel textoAdicionarIngrediente;
    private javax.swing.JLabel textoCliqueParaEditar;
    private javax.swing.JLabel textoIconeNovoIngrediente;
    private javax.swing.JLabel textoId;
    private javax.swing.JLabel textoNome;
    private javax.swing.JLabel textoPreencherDados;
    private javax.swing.JLabel textoProcurarIngrediente;
    private javax.swing.JLabel textoValor;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (tabelaIngredientes.getSelectedRow() != -1) {
            Ingrediente ingrediente = tableModel.getIngredientes().get(tabelaIngredientes.getSelectedRow());
            if (ingrediente.getIdIng() != 0) {
                ingredienteToForm(ingrediente);
            }
        }
    }
}
