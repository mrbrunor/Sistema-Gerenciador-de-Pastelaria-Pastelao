/*
 * The MIT License
 *
 * Copyright 2014 BrunoRicardo.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.au.gui;

import com.au.bean.Pedido;
import com.au.dao.PedidoDao;
import com.au.util.Imprime;
import com.au.util.LimitaDigitos;
import java.awt.Color;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.border.MatteBorder;

/**
 *
 * @author BrunoRicardo
 */
public class TelaReimpressao extends javax.swing.JDialog {

    private final int idCaixa;
    private final Border vermelha = new MatteBorder(1, 1, 1, 1, Color.red);
    private final Border normal;
    private final PedidoDao pDao = new PedidoDao();

    /**
     * Creates new form TelaRetirada
     *
     * @param parent
     * @param modal
     * @param idCaixa
     */
    public TelaReimpressao(java.awt.Frame parent, boolean modal, int idCaixa) {
        super(parent, modal);
        initComponents();
        normal = campoNumeroPedido.getBorder();
        campoNumeroPedido.setDocument(new LimitaDigitos((7), "[^0-9]"));
        this.idCaixa = idCaixa;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelSuperior = new javax.swing.JPanel();
        textoReimpressaoPedido = new javax.swing.JLabel();
        textoInsiraDados = new javax.swing.JLabel();
        painelInferior = new javax.swing.JPanel();
        textoNumeroPedido = new javax.swing.JLabel();
        campoNumeroPedido = new javax.swing.JTextField();
        botaoCancelarReimpressao = new javax.swing.JButton();
        botaoConfirmarReimpressao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        painelSuperior.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        textoReimpressaoPedido.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        textoReimpressaoPedido.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoReimpressaoPedido.setText("Reimpressão de Cupom");

        textoInsiraDados.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        textoInsiraDados.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoInsiraDados.setText("Insira os dados abaixo para efetuar a reimpressão do cupom do pedido:");

        javax.swing.GroupLayout painelSuperiorLayout = new javax.swing.GroupLayout(painelSuperior);
        painelSuperior.setLayout(painelSuperiorLayout);
        painelSuperiorLayout.setHorizontalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textoReimpressaoPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textoInsiraDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        painelSuperiorLayout.setVerticalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoReimpressaoPedido)
                .addGap(18, 18, 18)
                .addComponent(textoInsiraDados)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelInferior.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        textoNumeroPedido.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        textoNumeroPedido.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        textoNumeroPedido.setText("Número do Pedido:");

        campoNumeroPedido.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        campoNumeroPedido.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        campoNumeroPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNumeroPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelInferiorLayout = new javax.swing.GroupLayout(painelInferior);
        painelInferior.setLayout(painelInferiorLayout);
        painelInferiorLayout.setHorizontalGroup(
            painelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelInferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoNumeroPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoNumeroPedido)
                .addContainerGap())
        );
        painelInferiorLayout.setVerticalGroup(
            painelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelInferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoNumeroPedido)
                    .addComponent(campoNumeroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botaoCancelarReimpressao.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        botaoCancelarReimpressao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/cancel-32.png"))); // NOI18N
        botaoCancelarReimpressao.setText("Cancelar Reimpressão");
        botaoCancelarReimpressao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarReimpressaoActionPerformed(evt);
            }
        });

        botaoConfirmarReimpressao.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        botaoConfirmarReimpressao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/au/resources/icons/ok-32.png"))); // NOI18N
        botaoConfirmarReimpressao.setText("Confirmar Reimpressão de Cupom");
        botaoConfirmarReimpressao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConfirmarReimpressaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelSuperior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelInferior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botaoCancelarReimpressao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoConfirmarReimpressao)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCancelarReimpressao, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoConfirmarReimpressao))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoConfirmarReimpressaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConfirmarReimpressaoActionPerformed
        if (valida()) {
            this.dispose();
        }
    }//GEN-LAST:event_botaoConfirmarReimpressaoActionPerformed

    private void botaoCancelarReimpressaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarReimpressaoActionPerformed
        this.dispose();
    }//GEN-LAST:event_botaoCancelarReimpressaoActionPerformed

    private void campoNumeroPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNumeroPedidoActionPerformed
        if (valida()) {
            this.dispose();
        }
    }//GEN-LAST:event_campoNumeroPedidoActionPerformed

    public boolean valida() {
        boolean valida;

        if (!"".equals(campoNumeroPedido.getText())) {
            campoNumeroPedido.setBorder(normal);
            valida = validaPedido();
        } else {
            campoNumeroPedido.setBorder(vermelha);
            valida = false;
        }
        return valida;
    }

    public boolean validaPedido() {
        List<Pedido> pedidos = pDao.listaPedidosPorCaixa(idCaixa);
        if (pedidos != null) {
            for (int i = 0; i < pedidos.size(); i++) {
                if (pedidos.get(i).getNumPedido() == Integer.valueOf(campoNumeroPedido.getText())) {
                    if (pedidos.get(i).getEstadoPedido().equals("Cancelado") && JOptionPane.showConfirmDialog(this, "Este pedido foi cancelado. Deseja Reimprimir mesmo assim?", "Pedido Cancelado", JOptionPane.YES_NO_OPTION) == 1) {
                        return false;
                    }
                    try {
                        new Imprime().geraComandaVenda(pedidos.get(i).getIdPedido());
                        JOptionPane.showMessageDialog(this, "Pedido impresso com sucesso!", "Reimpressão de Pedido", JOptionPane.INFORMATION_MESSAGE);
                        return true;
                    } catch (UnsatisfiedLinkError | NoClassDefFoundError e) {
                        JOptionPane.showMessageDialog(this, "Erro ao imprimir o Cupom.\nVerifique a impressora e tente novamente.", "Erro ao Imprimir o Cupom", JOptionPane.ERROR_MESSAGE);
                        return false;
                    }

                }
            }
        }
        JOptionPane.showMessageDialog(this, "Pedido não foi encontrado!", "Reimpressão de Pedido", JOptionPane.INFORMATION_MESSAGE);
        return false;
    }

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelarReimpressao;
    private javax.swing.JButton botaoConfirmarReimpressao;
    private javax.swing.JTextField campoNumeroPedido;
    private javax.swing.JPanel painelInferior;
    private javax.swing.JPanel painelSuperior;
    private javax.swing.JLabel textoInsiraDados;
    private javax.swing.JLabel textoNumeroPedido;
    private javax.swing.JLabel textoReimpressaoPedido;
    // End of variables declaration//GEN-END:variables
}
